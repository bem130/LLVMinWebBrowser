function processMacros(text){return text.replace(/{{{[^}]+}}}/g,function(str){str=str.substr(3,str.length-6);var ret=eval(str);if(ret!==undefined){ret=ret.toString()}return ret})}function preprocess(h){var j=h.split("\n");var f="";var b=[];for(var d=0;d<j.length;d++){var k=j[d];if(k[k.length-1]=="\r"){k=k.substr(0,k.length-1)}if(!k[0]||k[0]!="#"){if(b.indexOf(false)==-1){f+=k+"\n"}}else{if(k[1]&&k[1]=="i"){var a=k.split(" ");var c=a[1];var e=a[2];var g=a[3];if(e){assert(e==="==");b.push(c in this&&this[c]==g)}else{b.push(c in this&&this[c]>0)}}else{if(k[2]&&k[2]=="l"){b.push(!b.pop())}else{if(k[2]&&k[2]=="n"){b.pop()}else{throw"Unclear preprocessor command: "+k}}}}}assert(b.length==0);return f}function addPointing(a){return a+"*"}function removePointing(b,a){if(a===0){return b}assert(b.substr(b.length-(a?a:1)).replace(/\*/g,"")==="");return b.substr(0,b.length-(a?a:1))}function pointingLevels(c){if(!c){return 0}var b=0;var a=c.length-1;while(c[a-b]&&c[a-b]==="*"){b++}return b}function removeAllPointing(a){return removePointing(a,pointingLevels(a))}function toNiceIdent(a){assert(a);if(parseFloat(a)==a){return a}if(a=="null"){return"0"}return a.replace("%","$").replace(/["&\\ \.@:<>,\*\[\]\(\)-]/g,"_")}function toNiceIdentCarefully(a){if(a[0]=="%"||a[0]=="@"){a=toNiceIdent(a)}return a}function isNiceIdent(a,b){if(b){return/^\(?[$_]+[\w$_\d ]*\)?$/.test(a)}else{return/^[$_]+[\w$_\d]*$/.test(a)}}function isStructPointerType(a){return !Runtime.isNumberType(a)&&a[0]=="%"}function isPointerType(a){return a[a.length-1]=="*"}function isStructType(a){if(isPointerType(a)){return false}if(/^\[\d+\ x\ (.*)\]/.test(a)){return true}if(/<?{ ?[^}]* ?}>?/.test(a)){return true}return a[0]=="%"}function isIntImplemented(a){return a[0]=="i"||isPointerType(a)}function getBits(a){if(!a||a[0]!="i"){return 0}var b=a.substr(1);if(!isNumber(b)){return 0}return parseInt(b)}function isIllegalType(a){var b=getBits(a);return b>0&&(b>=64||!isPowerOfTwo(b))}function isVoidType(a){return a=="void"}function isFunctionDef(d,c){var f=d.text;var e=removeAllPointing(f);if(e[0]!="("||e.substr(-1)!=")"){return false}if(e==="()"){return true}if(!d.item){return false}var a=false;var b=splitTokenList(d.item.tokens);b.forEach(function(h){var g=h[0].text;a=a||h.length>1||!(isType(g)||g=="...")});if(c){c.numArgs=b.length}return !a}function isPossiblyFunctionType(b){var a=b.length;return b[a-2]==")"&&b[a-1]=="*"}function isFunctionType(c,b){if(!isPossiblyFunctionType(c)){return false}c=c.replace(/"[^"]+"/g,'".."');var d;if(c[0]!="["){d=c.split(" ")}else{var a=c.search("]");a+=c.substr(a).search(" ");d=[c.substr(0,a),c.substr(a+1)]}if(pointingLevels(c)!==1){return false}var e=removeAllPointing(d.slice(1).join(" "));if(!e){return false}return isType(d[0])&&isFunctionDef({text:e,item:tokenize(e.substr(1,e.length-2),true)},b)}var isTypeCache={};function isType(b){if(b in isTypeCache){return isTypeCache[b]}var a=isPointerType(b)||isVoidType(b)||Runtime.isNumberType(b)||isStructType(b)||isFunctionType(b);isTypeCache[b]=a;return a}function isVarArgsFunctionType(b){var a="...)*";return b.substr(-a.length)==a}function countNormalArgs(b){var a={};if(!isFunctionType(b,a)){return -1}if(isVarArgsFunctionType(b)){a.numArgs--}return a.numArgs}function addIdent(a){a.ident=a.text;return a}function combineTokens(b){var a={lineNum:b[0].lineNum,text:"",tokens:[]};b.forEach(function(c){a.text+=c.text;a.tokens.push(c)});return a}function compareTokens(d,c){var g=d.__uid__;var f=c.__uid__;d.__uid__=0;c.__uid__=0;var e=JSON.stringify(d)==JSON.stringify(c);d.__uid__=g;c.__uid__=f;return e}function getTokenIndexByText(b,c){var a=0;while(b[a]&&b[a].text!=c){a++}return a}function findTokenText(a,b){return findTokenTextAfter(a,b,0)}function findTokenTextAfter(c,d,a){for(var b=a;b<c.tokens.length;b++){if(c.tokens[b].text==d){return b}}return -1}var SPLIT_TOKEN_LIST_SPLITTERS=set(",","to");function splitTokenList(e){if(e.length==0){return[]}if(!e.slice){e=e.tokens}if(e.slice(-1)[0].text!=","){e.push({text:","})}var b=[];var a=[];for(var d=0;d<e.length;d++){var c=e[d];if(c.text in SPLIT_TOKEN_LIST_SPLITTERS){b.push(a);a=[]}else{if(c.text==";"){b.push(a);break}else{a.push(c)}}}return b}function parseParamTokens(d){if(d.length===0){return[]}var a=[];if(d[d.length-1].text!=","){d.push({text:","})}var f=0;while(d.length>0){var b=0;while(d[b].text!=","){b++}var c=d.slice(0,b);d=d.slice(b+1);c=cleanSegment(c);var e=0;if(c[1]&&c[1].text==="byval"){e=QUANTUM_SIZE;c.splice(1,1);if(c[1]&&c[1].text==="align"){assert(isNumber(c[2].text));e=parseInt(c[2].text);c.splice(1,2)}}if(c.length==1){if(c[0].text=="..."){a.push({intertype:"varargs"})}else{a.push({intertype:"value",type:c[0].text,ident:toNiceIdent("%")+f});Types.needAnalysis[a[a.length-1].type]=0;f++}}else{if(c[1].text in PARSABLE_LLVM_FUNCTIONS){a.push(parseLLVMFunctionCall(c))}else{if(c[1].text==="blockaddress"){a.push(parseBlockAddress(c))}else{if(c[2]&&c[2].text=="to"){c=c.slice(0,2)}while(c.length>2){c[0].text+=c[1].text;c.splice(1,1)}a.push({intertype:"value",type:c[0].text,ident:toNiceIdent(parseNumerical(c[1].text,c[0].text))});Types.needAnalysis[removeAllPointing(a[a.length-1].type)]=0}}}a[a.length-1].byVal=e}return a}function hasVarArgs(b){for(var a=0;a<b.length;a++){if(b[a].intertype=="varargs"){return true}}return false}var UNINDEXABLE_GLOBALS=set("_llvm_global_ctors");function noticePtr(a){if(!NAMED_GLOBALS&&!LibraryManager.loaded){UNINDEXABLE_GLOBALS[a]=1}}function isIndexableGlobal(b){if(!(b in Variables.globals)){return false}if(b in UNINDEXABLE_GLOBALS){return false}var a=Variables.globals[b];return !a.alias&&!a.external}function makeGlobalDef(a){if(!NAMED_GLOBALS&&isIndexableGlobal(a)){return""}return"var "+a+";"}function makeGlobalUse(a){if(!NAMED_GLOBALS&&isIndexableGlobal(a)){return"("+getFastValue("GLOBAL_BASE","+",Variables.indexedGlobals[a])+")"}return a}function sortGlobals(b){var c=keys(b);c.sort();var a=invertArray(c);return values(b).sort(function(e,d){return a[d.ident]-a[e.ident]})}function finalizeParam(b){if(b.intertype in PARSABLE_LLVM_FUNCTIONS){return finalizeLLVMFunctionCall(b)}else{if(b.intertype==="blockaddress"){return finalizeBlockAddress(b)}else{if(b.intertype==="jsvalue"){return b.ident}else{if(b.type=="i64"&&USE_TYPED_ARRAYS==2){return parseI64Constant(b.ident)}var a=toNiceIdent(b.ident);if(a in Variables.globals){a=makeGlobalUse(a)}return a}}}}function parseLLVMSegment(b){var a;if(b.length==1){if(isType(b[0].text)){Types.needAnalysis[b[0].text]=0;return{intertype:"type",ident:toNiceIdent(b[0].text),type:b[0].text}}else{return{intertype:"value",ident:toNiceIdent(b[0].text),type:"i32"}}}else{if(b[1].type&&b[1].type=="{"){a=b[0].text;Types.needAnalysis[a]=0;return{intertype:"structvalue",params:splitTokenList(b[1].tokens).map(parseLLVMSegment),type:a}}else{if(b[0].text in PARSABLE_LLVM_FUNCTIONS){return parseLLVMFunctionCall([{text:"?"}].concat(b))}else{if(b[1].text in PARSABLE_LLVM_FUNCTIONS){return parseLLVMFunctionCall(b)}else{if(b[1].text==="blockaddress"){return parseBlockAddress(b)}else{a=b[0].text;Types.needAnalysis[a]=0;return{intertype:"value",ident:toNiceIdent(b[1].text),type:b[0].text}}}}}}}function cleanSegment(a){while(a.length>=2&&["noalias","sret","nocapture","nest","zeroext","signext"].indexOf(a[1].text)!=-1){a.splice(1,1)}return a}var MATHOPS=set(["add","sub","sdiv","udiv","mul","icmp","zext","urem","srem","fadd","fsub","fmul","fdiv","fcmp","frem","uitofp","sitofp","fpext","fptrunc","fptoui","fptosi","trunc","sext","select","shl","shr","ashl","ashr","lshr","lshl","xor","or","and","ptrtoint","inttoptr"]);var PARSABLE_LLVM_FUNCTIONS=set("getelementptr","bitcast");mergeInto(PARSABLE_LLVM_FUNCTIONS,MATHOPS);function parseLLVMFunctionCall(e){e=e.slice(0);e=cleanSegment(e);var c=null;if(!e[2]||!e[2].item){c=e.splice(2,1)[0];if(c&&c.text){c=c.text}}assertTrue(["inreg","byval"].indexOf(e[1].text)==-1);assert(e[1].text in PARSABLE_LLVM_FUNCTIONS);while(!e[2].item){e.splice(2,1);if(!e[2]){throw"Invalid segment!"}}var a=e[1].text;var d=e[0].text;if(d==="?"){if(a==="getelementptr"){d="*"}else{if(e[2].item.tokens.slice(-2)[0].text==="to"){d=e[2].item.tokens.slice(-1)[0].text}}}var b={intertype:a,variant:c,type:d,params:parseParamTokens(e[2].item.tokens)};Types.needAnalysis[b.type]=0;b.ident=toNiceIdent(b.params[0].ident||"NOIDENT");return b}function eatLLVMIdent(b){var a;if(b[0].text in PARSABLE_LLVM_FUNCTIONS){a=parseLLVMFunctionCall([{text:"i0"}].concat(b.slice(0,2))).ident;b.shift();b.shift()}else{a=b[0].text;b.shift()}return a}function cleanOutTokens(d,e,b){if(typeof b!=="object"){b=[b]}for(var c=b.length-1;c>=0;c--){var a=b[c];while(e[a].text in d){e.splice(a,1)}}}function _IntToHex(a){assert(a>=0&&a<=15);if(a<=9){return String.fromCharCode("0".charCodeAt(0)+a)}else{return String.fromCharCode("A".charCodeAt(0)+a-10)}}function IEEEUnHex(stringy){stringy=stringy.substr(2);if(stringy.replace(/0/g,"")===""){return 0}while(stringy.length<16){stringy="0"+stringy}if(FAKE_X86_FP80&&stringy.length>16){stringy=stringy.substr(stringy.length-16,16);warnOnce(".ll contains floating-point values with more than 64 bits. Faking values for them. If they are used, this will almost certainly break horribly!")}assert(stringy.length===16,"Can only unhex 16-digit double numbers, nothing platform-specific");var top=eval("0x"+stringy[0]);var neg=!!(top&8);if(neg){stringy=_IntToHex(top&~8)+stringy.substr(1)}var a=eval("0x"+stringy.substr(0,8));var b=eval("0x"+stringy.substr(8));var e=a>>((52-32)&2047);a=a&1048575;if(e===2047){if(a==0&&b==0){return neg?"-Infinity":"Infinity"}else{return"NaN"}}e-=1023;var absolute=((((a|1048576)*1)/Math.pow(2,52-32))*Math.pow(2,e))+(((b*1)/Math.pow(2,52))*Math.pow(2,e));return(absolute*(neg?-1:1)).toString()}function makeInlineCalculation(c,b,a){if(!isNiceIdent(b,true)){c=a+"="+b+","+c;b=a}return"("+c.replace(/VALUE/g,b)+")"}function makeI64(a,b){b=b||"0";if(USE_TYPED_ARRAYS==2){return"["+makeSignOp(a,"i32","un",1,1)+","+makeSignOp(b,"i32","un",1,1)+"]"}else{if(b){return RuntimeGenerator.makeBigInt(a,b)}return a}}function splitI64(a){if(legalizedI64s){return[a+">>>0","Math.min(Math.floor(("+a+")/4294967296), 4294967295)"]}else{return makeInlineCalculation(makeI64("VALUE>>>0","Math.min(Math.floor(VALUE/4294967296), 4294967295)"),a,"tempBigIntP")}}function mergeI64(b,a){assert(USE_TYPED_ARRAYS==2);if(legalizedI64s){return RuntimeGenerator.makeBigInt(b+"$0",b+"$1",a)}else{return makeInlineCalculation(RuntimeGenerator.makeBigInt("VALUE[0]","VALUE[1]",a),b,"tempI64")}}function ensureI64_1(a){if(USE_TYPED_ARRAYS==2){return a}return splitI64(a,1)}function makeCopyI64(a){assert(USE_TYPED_ARRAYS==2);return a+".slice(0)"}function parseArbitraryInt(h,l){assert(l%32==0||("i"+(l%32)) in Runtime.INT_TYPES,"Arbitrary-sized ints must tails that are of legal size");function e(o){var m=[];for(var n=0;n<o.length;n++){m.push(o.charCodeAt(n)-"0".charCodeAt(0))}return m}function b(m){for(var n=m.length-1;n>=0;n--){var q=m[n];var p=q%2;q=Math.floor(q/2);m[n]=q;if(p){assert(n+1<m.length);var o=m[n+1];o+=5;if(o>=10){m[n]=q+1;o-=10}m[n+1]=o}}}function d(m){for(var o=m.length-1;o>=0;o--){var p=m[o]*2;r=p>=10;m[o]=p%10;var n=o-1;if(r){if(n<0){m.unshift(1);break}m[n]+=0.5}}}function j(n,m){while(n.length>m.length){m.splice(0,0,0)}for(var p=0;p<n.length;p++){n[p]-=m[p];if(n[p]<0){n[p]+=10;var o=p-1;while(n[o]==0){n[o]=9;o--;assert(o>=0)}n[o]--}}}function c(m){for(var n=0;n<m.length;n++){if(m[n]>0){return false}}return true}var k;if(h[0]=="-"){h=h.substr(1);k=e("1");for(var f=0;f<l;f++){d(k)}j(k,e(h))}else{k=e(h)}var a=[];while(!c(k)){a.push((k[k.length-1]%2!=0)+0);k[k.length-1]=k[k.length-1]&254;b(k)}var g=zeros(Math.ceil(l/32));for(var f=0;f<a.length;f++){g[Math.floor(f/32)]+=a[f]*Math.pow(2,f%32)}return g}function parseI64Constant(c,b){if(!isNumber(c)){return legalizedI64s?c:makeCopyI64(c)}var a=parseArbitraryInt(c,64);if(legalizedI64s||b){return a}return"["+a[0]+","+a[1]+"]"}function parseNumerical(b,a){if((!a||a=="double"||a=="float")&&(b.substr&&b.substr(0,2)=="0x")){b=IEEEUnHex(b)}else{if(USE_TYPED_ARRAYS==2&&isIllegalType(a)){return b}else{if(b=="null"){b="0"}else{if(b==="true"){return"1"}else{if(b==="false"){return"0"}}}}}if(isNumber(b)){return parseFloat(b).toString()}else{return b}}function parseLLVMString(str){var ret=[];var i=0;while(i<str.length){var chr=str[i];if(chr!="\\"){ret.push(chr.charCodeAt(0));i++}else{ret.push(eval("0x"+str[i+1]+str[i+2]));i+=3}}return ret}function getLabelIds(a){return a.map(function(b){return b.ident})}function cleanLabel(a){if(a[0]=="B"){return a.substr(5)}else{return a}}function getOldLabel(a){var b=a.split("|");return b[b.length-1]}function calcAllocatedSize(a){if(pointingLevels(a)==0&&isStructType(a)){return Types.types[a].flatSize}else{return Runtime.getNativeTypeSize(a)}}function generateStructTypes(d){if(isArray(d)){return d}if(Runtime.isNumberType(d)||isPointerType(d)){if(USE_TYPED_ARRAYS==2&&d=="i64"){return["i64",0,0,0,"i32",0,0,0]}return[d].concat(zeros(Runtime.getNativeFieldSize(d)-1))}var e=Types.types[d];var c=e.flatSize;var b=new Array(c);var a=0;function f(m){var n=a;for(var k=0;k<m.fields.length;k++){var l=m.fields[k];if(!SAFE_HEAP&&isPointerType(l)){l="*"}if(Runtime.isNumberType(l)||isPointerType(l)){if(USE_TYPED_ARRAYS==2&&l=="i64"){b[a++]="i64";b[a++]=0;b[a++]=0;b[a++]=0;b[a++]="i32";b[a++]=0;b[a++]=0;b[a++]=0;continue}b[a++]=l}else{f(Types.types[l])}var h=(k+1<m.fields.length?m.flatIndexes[k+1]:m.flatSize)-(a-n);for(var g=0;g<h;g++){b[a++]=0}}}f(e);assert(a==c);return b}function recurseBlock(c,b){var a=[];if(c.type=="reloop"){a.push(b(c.inner))}else{if(c.type=="multiple"){c.entryLabels.forEach(function(d){a.push(b(d.block))})}}a.push(b(c.next));return a}function getActualLabelId(a){return a.split("|").slice(-1)[0]}function indentify(d,b){if(d.length>1024*1024){return d}if(typeof b==="number"){var a=b;b="";for(var c=0;c<a;c++){b+=" "}}return d.replace(/\n/g,"\n"+b)}function correctSpecificSign(){if(!Framework.currItem){return false}if(Framework.currItem.funcData.ident.indexOf("emscripten_autodebug")>=0){return 1}return(CORRECT_SIGNS===2&&Debugging.getIdentifier() in CORRECT_SIGNS_LINES)||(CORRECT_SIGNS===3&&!(Debugging.getIdentifier() in CORRECT_SIGNS_LINES))}function correctSigns(){return CORRECT_SIGNS===1||correctSpecificSign()}function correctSpecificOverflow(){if(!Framework.currItem){return false}return(CORRECT_OVERFLOWS===2&&Debugging.getIdentifier() in CORRECT_OVERFLOWS_LINES)||(CORRECT_OVERFLOWS===3&&!(Debugging.getIdentifier() in CORRECT_OVERFLOWS_LINES))}function correctOverflows(){return CORRECT_OVERFLOWS===1||correctSpecificOverflow()}function correctSpecificRounding(){if(!Framework.currItem){return false}return(CORRECT_ROUNDINGS===2&&Debugging.getIdentifier() in CORRECT_ROUNDINGS_LINES)||(CORRECT_ROUNDINGS===3&&!(Debugging.getIdentifier() in CORRECT_ROUNDINGS_LINES))}function correctRoundings(){return CORRECT_ROUNDINGS===1||correctSpecificRounding()}function checkSpecificSafeHeap(){if(!Framework.currItem){return false}return(SAFE_HEAP===2&&Debugging.getIdentifier() in SAFE_HEAP_LINES)||(SAFE_HEAP===3&&!(Debugging.getIdentifier() in SAFE_HEAP_LINES))}function checkSafeHeap(){return SAFE_HEAP===1||checkSpecificSafeHeap()}function getHeapOffset(c,b){if(USE_TYPED_ARRAYS!==2){return c}else{if(Runtime.getNativeFieldSize(b)>4){b="i32"}var a=Math.log(Runtime.getNativeTypeSize(b))/Math.LN2;if(a!=0){return"(("+c+")>>"+(a)+")"}else{return"("+c+")"}}}function makeGetValue(a,m,l,c,d,j,h,k){noticePtr(a);if(UNALIGNED_MEMORY){h=1}if(isStructType(l)){var b=Types.types[l];var g=[];for(var f=0;f<b.fields.length;f++){g.push("f"+f+": "+makeGetValue(a,m+b.flatIndexes[f],b.fields[f],c,d))}return"{ "+g.join(", ")+" }"}if(DOUBLE_MODE==1&&USE_TYPED_ARRAYS==2&&l=="double"){return"(tempDoubleI32[0]="+makeGetValue(a,m,"i32",c,d,j,h)+",tempDoubleI32[1]="+makeGetValue(a,getFastValue(m,"+",Runtime.getNativeTypeSize("i32")),"i32",c,d,j,h)+",tempDoubleF64[0])"}if(USE_TYPED_ARRAYS==2&&h){var n=Runtime.getNativeTypeSize(l);if(n>h){var g="(";if(isIntImplemented(l)){if(n==4&&h==2){g+=makeGetValue(a,m,"i16",c,2,j)+"+("+makeGetValue(a,getFastValue(m,"+",2),"i16",c,2,j)+"<<16)"}else{g="";for(var f=0;f<n;f++){g+="("+makeGetValue(a,getFastValue(m,"+",f),"i8",c,1,j)+(f>0?"<<"+(8*f):"")+")";if(f<n-1){g+="|"}}g="("+makeSignOp(g,l,d?"un":"re",true)}}else{if(l=="float"){g+="copyTempFloat("+getFastValue(a,"+",m)+"),tempDoubleF32[0]"}else{g+="copyTempDouble("+getFastValue(a,"+",m)+"),tempDoubleF64[0]"}}g+=")";return g}}var e=calcFastOffset(a,m,c);if(SAFE_HEAP&&!k){if(l!=="null"&&l[0]!=="#"){l='"'+safeQuote(l)+'"'}if(l[0]==="#"){l=l.substr(1)}return"SAFE_HEAP_LOAD("+e+", "+l+", "+(!!d+0)+", "+((!checkSafeHeap()||j)|0)+")"}else{return makeGetSlabs(a,l,false,d)[0]+"["+getHeapOffset(e,l)+"]"}}function indexizeFunctions(b,a){assert((a&&a!=="?")||(typeof b==="string"&&b.substr(0,6)==="CHECK_"),"No type given for function indexizing");assert(b!==a,"Type set to value");if(a&&isFunctionType(a)&&b[0]==="_"){if(BUILD_AS_SHARED_LIB){return"(FUNCTION_TABLE_OFFSET + "+Functions.getIndex(b)+")"}else{return Functions.getIndex(b)}}return b}function makeSetValue(a,n,o,m,e,k,j,l,s,d){noticePtr(a);if(UNALIGNED_MEMORY&&!d){j=1}s=s||";";if(isStructType(m)){var c=Types.types[m];var h=[];if(typeof o==="string"){o=range(c.fields.length).map(function(t){return o+".f"+t})}for(var g=0;g<c.fields.length;g++){h.push(makeSetValue(a,getFastValue(n,"+",c.flatIndexes[g]),o[g],c.fields[g],e))}return h.join("; ")}if(DOUBLE_MODE==1&&USE_TYPED_ARRAYS==2&&m=="double"){return"(tempDoubleF64[0]="+o+","+makeSetValue(a,n,"tempDoubleI32[0]","i32",e,k,j,l,",")+","+makeSetValue(a,getFastValue(n,"+",Runtime.getNativeTypeSize("i32")),"tempDoubleI32[1]","i32",e,k,j,l,",")+")"}else{if(USE_TYPED_ARRAYS==2&&m=="i64"){return"(tempI64 = ["+splitI64(o)+"],"+makeSetValue(a,n,"tempI64[0]","i32",e,k,j,l,",")+","+makeSetValue(a,getFastValue(n,"+",Runtime.getNativeTypeSize("i32")),"tempI64[1]","i32",e,k,j,l,",")+")"}}var p=getBits(m);var b=p>0&&!isPowerOfTwo(p);if(USE_TYPED_ARRAYS==2&&(j||b)){var q=Runtime.getNativeTypeSize(m);if(q>j||b){var h="";if(isIntImplemented(m)){if(q==4&&j==2){h+="tempBigInt="+o+s;h+=makeSetValue(a,n,"tempBigInt&0xffff","i16",e,k,2)+s;h+=makeSetValue(a,getFastValue(n,"+",2),"tempBigInt>>16","i16",e,k,2)}else{h+="tempBigInt="+o+s;for(var g=0;g<q;g++){h+=makeSetValue(a,getFastValue(n,"+",g),"tempBigInt&0xff","i8",e,k,1);if(g<q-1){h+=s+"tempBigInt>>=8"+s}}}}else{h+=makeSetValue("tempDoublePtr",0,o,m,e,k,8,null,null,true)+s;h+=makeCopyValues(getFastValue(a,"+",n),"tempDoublePtr",Runtime.getNativeTypeSize(m),m,null,j,s)}return h}}o=indexizeFunctions(o,m);var f=calcFastOffset(a,n,e);if(SAFE_HEAP&&!l){if(m!=="null"&&m[0]!=="#"){m='"'+safeQuote(m)+'"'}if(m[0]==="#"){m=m.substr(1)}return"SAFE_HEAP_STORE("+f+", "+o+", "+m+", "+((!checkSafeHeap()||k)|0)+")"}else{return makeGetSlabs(a,m,true).map(function(i){return i+"["+getHeapOffset(f,m)+"]="+o}).join(s)}}var SEEK_OPTIMAL_ALIGN_MIN=20;var UNROLL_LOOP_MAX=8;function makeSetValues(a,g,h,f,c,e){noticePtr(a);function b(m,k,j,l){j=j||1;l=l||h;return range(k).map(function(n){return makeSetValue(a,getFastValue(g,"+",n*j),l,m)}).join("; ")}if(USE_TYPED_ARRAYS<=1){if(isNumber(c)&&parseInt(c)<=UNROLL_LOOP_MAX){return b(f,c)}return"for (var $$dest = "+getFastValue(a,"+",g)+", $$stop = $$dest + "+c+"; $$dest < $$stop; $$dest++) {\n"+makeSetValue("$$dest","0",h,f)+"\n}"}else{if(!isNumber(c)||!isNumber(h)||(e<4&&parseInt(c)>=SEEK_OPTIMAL_ALIGN_MIN)){return"_memset("+getFastValue(a,"+",g)+", "+h+", "+c+", "+e+")"}c=parseInt(c);h=parseInt(h);if(h<0){h+=256}var i={1:h,2:h|(h<<8),4:h|(h<<8)|(h<<16)|(h<<24)};var d=[];[4,2,1].forEach(function(j){if(c==0){return}if(e>=j){if(c<=UNROLL_LOOP_MAX*j){d.push(b("i"+(j*8),Math.floor(c/j),j,i[j]))}else{d.push("for (var $$dest = "+getFastValue(a,"+",g)+(j>1?">>"+log2(j):"")+", $$stop = $$dest + "+Math.floor(c/j)+"; $$dest < $$stop; $$dest++) {\n  HEAP"+(j*8)+"[$$dest] = "+i[j]+"\n}")}g=getFastValue(g,"+",Math.floor(c/j)*j);c%=j}});return d.join("; ")}}var TYPED_ARRAY_SET_MIN=Infinity;function makeCopyValues(i,a,d,h,b,f,k){noticePtr(i);noticePtr(a);k=k||";";function c(n,m,l){l=l||1;return range(m).map(function(o){if(USE_TYPED_ARRAYS<=1&&n==="null"){return makeGetSlabs(i,"null",true).map(function(p){return p+"["+getFastValue(i,"+",o)+"]="+p+"["+getFastValue(a,"+",o)+"]"}).join(k)+(SAFE_HEAP?k+"SAFE_HEAP_COPY_HISTORY("+getFastValue(i,"+",o)+", "+getFastValue(a,"+",o)+")":"")}else{return makeSetValue(i,o*l,makeGetValue(a,o*l,n),n)}}).join(k)}if(USE_TYPED_ARRAYS<=1){if(isNumber(d)&&parseInt(d)<=UNROLL_LOOP_MAX){return c(h,d)}var j=i,g=a;i="$$dest";a="$$src";return"for (var $$src = "+g+", $$dest = "+j+", $$stop = $$src + "+d+"; $$src < $$stop; $$src++, $$dest++) {\n"+c(h,1)+" }"}else{if(!isNumber(d)||(f<4&&parseInt(d)>=SEEK_OPTIMAL_ALIGN_MIN)){return"_memcpy("+i+", "+a+", "+d+", "+f+")"}d=parseInt(d);var e=[];[4,2,1].forEach(function(l){if(d==0){return}if(f>=l){if(d<=UNROLL_LOOP_MAX*l||k==","){e.push(c("i"+(l*8),Math.floor(d/l),l))}else{assert(k==";");e.push("for (var $$src = "+a+(l>1?">>"+log2(l):"")+", $$dest = "+i+(l>1?">>"+log2(l):"")+", $$stop = $$src + "+Math.floor(d/l)+"; $$src < $$stop; $$src++, $$dest++) {\n  HEAP"+(l*8)+"[$$dest] = HEAP"+(l*8)+"[$$src]\n}")}a=getFastValue(a,"+",Math.floor(d/l)*l);i=getFastValue(i,"+",Math.floor(d/l)*l);d%=l}});return e.join(k)}}function makeHEAPView(d,e,a){var c=parseInt(d.replace("U","").replace("F",""))/8;var b=c==1?"":(">>"+log2(c));return"HEAP"+d+".subarray(("+e+")"+b+",("+a+")"+b+")"}var PLUS_MUL=set("+","*");var MUL_DIV=set("*","/");var PLUS_MINUS=set("+","-");function getFastValue(a,op,b,type){a=a.toString();b=b.toString();if(isNumber(a)&&isNumber(b)){if(op=="pow"){return Math.pow(a,b).toString()}else{return eval(a+op+"("+b+")").toString()}}if(op=="pow"){if(a=="2"&&isIntImplemented(type)){return"(1 << ("+b+"))"}return"Math.pow("+a+", "+b+")"}if(op in PLUS_MUL&&isNumber(a)){var c=b;b=a;a=c}if(op in MUL_DIV){if(op=="*"){if(a==0||b==0){return"0"}else{if(a==1){return b}else{if(b==1){return a}else{if(isNumber(b)&&type&&isIntImplemented(type)&&Runtime.getNativeTypeSize(type)<=32){var shifts=Math.log(parseFloat(b))/Math.LN2;if(shifts%1==0){return"("+a+"<<"+shifts+")"}}}}}}else{if(a=="0"){return"0"}else{if(b==1){return a}}}}else{if(op in PLUS_MINUS){if(b[0]=="-"){op=op=="+"?"-":"+";b=b.substr(1)}if(a==0){return op=="+"?b:"(-"+b+")"}else{if(b==0){return a}}}}return"("+a+")"+op+"("+b+")"}function getFastValues(e,g,d){assert(g=="+");var f=true;while(f){f=false;for(var c=0;c<e.length-1;c++){var a=getFastValue(e[c],g,e[c+1],d);var b=e[c]+g+e[c+1];if(a.length<b.length||a.indexOf(g)<0){e[c]=a;e.splice(c+1,1);c--;f=true;break}}}if(e.length==1){return e[0]}return e.reduce(function(i,h){return i+g+h})}function calcFastOffset(d,c,a){var b=a?"0":makeGetPos(d);return getFastValue(b,"+",c,"i32")}function makeGetPos(a){return a}var IHEAP_FHEAP=set("IHEAP","IHEAPU","FHEAP");function makePointer(slab,pos,allocator,type,ptr){assert(type,"makePointer requires type info");if(slab.substr(0,4)==="HEAP"||(USE_TYPED_ARRAYS==1&&slab in IHEAP_FHEAP)){return pos}var types=generateStructTypes(type);var de;try{var evaled=typeof slab==="string"?eval(slab):slab;de=dedup(evaled);if(de.length===1&&de[0]===0){slab=types.length;if(USE_TYPED_ARRAYS==2){types=["i8"]}}}catch(e){}de=dedup(types);if(de.length===1){types=de[0]}else{if(de.length===2&&typeof slab==="number"){de=de.filter(function(x){return x!==0});if(de.length===1){types=de[0]}}}var chunkSize=10240;function chunkify(array){var ret="";var index=0;while(index<array.length){ret=(ret?ret+".concat(":"")+"["+array.slice(index,index+chunkSize).map(JSON.stringify)+"]"+(ret?")":"");index+=chunkSize}return ret}if(typeof slab=="string"&&evaled&&evaled.length>chunkSize){slab=chunkify(evaled)}if(typeof types!="string"&&types.length>chunkSize){types=chunkify(types)}else{types=JSON.stringify(types)}return"allocate("+slab+", "+types+(allocator?", "+allocator:"")+(allocator=="ALLOC_NONE"?", "+ptr:"")+")"}function makeGetSlabs(d,c,b,a){assert(c);if(!USE_TYPED_ARRAYS){return["HEAP"]}else{if(USE_TYPED_ARRAYS==1){if(c in Runtime.FLOAT_TYPES||c==="int64"){return["FHEAP"]}else{if(c in Runtime.INT_TYPES||isPointerType(c)){return[a?"IHEAPU":"IHEAP"]}else{assert(b,"Unknown slab type and !allowMultiple: "+c);if(USE_FHEAP){return["IHEAP","FHEAP"]}else{return["IHEAP"]}}}}else{if(isPointerType(c)){c="i32"}switch(c){case"i1":case"i8":return[a?"HEAPU8":"HEAP8"];break;case"i16":return[a?"HEAPU16":"HEAP16"];break;case"i32":case"i64":return[a?"HEAPU32":"HEAP32"];break;case"float":case"double":return["HEAPF32"];break;default:throw"what, exactly, can we do for unknown types in TA2?! "+new Error().stack}}}return[]}function finalizeLLVMFunctionCall(e,d){if(e.intertype=="getelementptr"){return makePointer(makeGetSlabs(e.ident,e.type)[0],getGetElementPtrIndexes(e),null,e.type)}if(e.intertype=="bitcast"){var g=e.params[0].type;var c=e.type;if(isPossiblyFunctionType(g)&&isPossiblyFunctionType(c)){var b=countNormalArgs(g);var f=countNormalArgs(c);if(b!=f&&b&&f){warnOnce("Casting a function pointer type to another with a different number of arguments. See more info in the compiler source");if(VERBOSE){warnOnce("Casting a function pointer type to another with a different number of arguments: "+g+" vs. "+c+", on "+e.params[0].ident)}}}}var a={op:e.intertype,variant:e.variant,type:e.type,params:e.params.slice(0)};return processMathop(a)}function getGetElementPtrIndexes(d){var c=d.params[0].type;if(USE_TYPED_ARRAYS==2){d.params.forEach(function(g){g.type="i32"})}d.params=d.params.map(finalizeLLVMParameter);var e=d.params[0];c=removePointing(c);var b=[makeGetPos(e)];var f=d.params[1];if(f!=0){if(isStructType(c)){b.push(getFastValue(Types.types[c].flatSize,"*",f,"i32"))}else{b.push(getFastValue(Runtime.getNativeTypeSize(c),"*",f,"i32"))}}d.params.slice(2,d.params.length).forEach(function(g){var k=g;var j=Types.types[c];if(isStructType(c)&&j.needsFlattening){if(j.flatFactor){b.push(getFastValue(k,"*",j.flatFactor,"i32"))}else{if(isNumber(k)){b.push(j.flatIndexes[k])}else{b.push(toNiceIdent(c)+"___FLATTENER["+k+"]")}}}else{if(k!=0){b.push(k)}}if(!isNumber(k)||parseInt(k)<0){for(var h=1;h<j.fields.length;h++){assert(j.fields[0]===j.fields[h])}k=0}c=j&&j.fields[k]?j.fields[k]:""});var a=getFastValues(b,"+","i32");a=handleOverflow(a,32);return a}function handleOverflow(c,b){if(!b){return c}var a=correctOverflows();warnOnce(!a||b<=32,"Cannot correct overflows of this many bits: "+b);if(CHECK_OVERFLOWS){return"CHECK_OVERFLOW("+c+", "+b+", "+Math.floor(correctSpecificOverflow()&&!PGO)+(PGO?', "'+Debugging.getIdentifier()+'"':"")+")"}if(!a){return c}if(b==32){return"(("+c+")|0)"}else{if(b<32){return"(("+c+")&"+(Math.pow(2,b)-1)+")"}else{return c}}}function makeLLVMStruct(a){return"{ "+a.map(function(c,b){return"f"+b+": "+c}).join(", ")+" }"}function finalizeLLVMParameter(c,b){var a;if(isNumber(c)){return c}else{if(typeof c==="string"){return toNiceIdentCarefully(c)}else{if(c.intertype in PARSABLE_LLVM_FUNCTIONS){a=finalizeLLVMFunctionCall(c,b)}else{if(c.ident=="zeroinitializer"){if(isStructType(c.type)){return makeLLVMStruct(zeros(Types.types[c.type].fields.length))}else{return"0"}}else{if(c.intertype=="value"){a=c.ident;if(a in Variables.globals){a=makeGlobalUse(a)}if(c.type=="i64"&&USE_TYPED_ARRAYS==2){a=parseI64Constant(a)}a=parseNumerical(a,c.type)}else{if(c.intertype=="structvalue"){a=makeLLVMStruct(c.params.map(function(d){return finalizeLLVMParameter(d,b)}))}else{if(c.intertype==="blockaddress"){return finalizeBlockAddress(c)}else{if(c.intertype==="type"){return c.ident}else{if(c.intertype=="mathop"){return processMathop(c)}else{throw"invalid llvm parameter: "+c.intertype}}}}}}}}}assert(c.type||(typeof c==="string"&&c.substr(0,6)==="CHECK_"),"Missing type for param!");if(!b){a=indexizeFunctions(a,c.type)}return a}function makeComparison(d,c,e){if(!isIllegalType(e)){return d+" == "+c}else{assert(e=="i64");return d+"$0 == "+c+"$0 && "+d+"$1 == "+c+"$1"}}function makeSignOp(value,type,op,force,ignore){if(USE_TYPED_ARRAYS==2&&type=="i64"){return value}if(isPointerType(type)){type="i32"}if(!value){return value}var bits,full;if(type in Runtime.INT_TYPES){bits=parseInt(type.substr(1));full=op+"Sign("+value+", "+bits+", "+Math.floor(ignore||(correctSpecificSign()&&!PGO))+(PGO?', "'+(ignore?"":Debugging.getIdentifier())+'"':"")+")";if(isNumber(value)){return eval(full).toString()}}if((ignore||!correctSigns())&&!CHECK_SIGNS&&!force){return value}if(type in Runtime.INT_TYPES){if(!CHECK_SIGNS||ignore){if(bits===32){if(op==="re"){return"(("+value+")|0)"}else{return"(("+value+")>>>0)"}}else{if(bits<32){if(op==="re"){return makeInlineCalculation("(VALUE << "+(32-bits)+") >> "+(32-bits),value,"tempInt")}else{return"(("+value+")&"+(Math.pow(2,bits)-1)+")"}}else{if(op==="re"){return makeInlineCalculation("VALUE >= "+Math.pow(2,bits-1)+" ? VALUE-"+Math.pow(2,bits)+" : VALUE",value,"tempBigIntS")}else{return makeInlineCalculation("VALUE >= 0 ? VALUE : "+Math.pow(2,bits)+"+VALUE",value,"tempBigIntS")}}}}return full}return value}function makeRounding(d,c,a,b){assert(c);if(c<=32&&a){return"(("+d+")&-1)"}if(!correctRoundings()||(!a&&!b)){return"Math.floor("+d+")"}return makeInlineCalculation("VALUE >= 0 ? Math.floor(VALUE) : Math.ceil(VALUE)",d,"tempBigIntR")}var UNSIGNED_OP=set("udiv","urem","uitofp","zext","lshr");var SIGNED_OP=set("sdiv","srem","sitofp","sext","ashr");function isUnsignedOp(b,a){return b in UNSIGNED_OP||(a&&a[0]=="u")}function isSignedOp(b,a){return b in SIGNED_OP||(a&&a[0]=="s")}var legalizedI64s=USE_TYPED_ARRAYS==2;function processMathop(t){var j=t.op;var h=t.variant;var d=t.type;var f=["","","",""];var l=[];for(var q=0;q<3;q++){if(t.params[q]){f[q]=t.params[q].type||d;l[q]=finalizeLLVMParameter(t.params[q]);if(!isNumber(l[q])&&!isNiceIdent(l[q])){l[q]="("+l[q]+")"}}else{l[q]=null}}var n=l.slice(0);if(isUnsignedOp(j,h)){l[0]=makeSignOp(l[0],f[0],"un");l[1]=makeSignOp(l[1],f[1],"un")}else{if(isSignedOp(j,h)){l[0]=makeSignOp(l[0],f[0],"re");l[1]=makeSignOp(l[1],f[1],"re")}}var p=null;if(t.type[0]==="i"){p=parseInt(t.type.substr(1))}var g=parseInt(((t.params[1]&&t.params[1].ident)?t.params[1].ident:t.type).substr(1));function s(i){return makeInlineCalculation("VALUE-VALUE%1",i,"tempBigIntI")}if((d=="i64"||f[0]=="i64"||f[1]=="i64"||l[1]=="(i64)")&&USE_TYPED_ARRAYS==2){var u=function(){warnOnce("Arithmetic on 64-bit integers in mode 1 is rounded and flaky, like mode 0!")};var w=l[0]+(legalizedI64s?"$0":"[0]");var c=l[0]+(legalizedI64s?"$1":"[1]");var v=l[1]+(legalizedI64s?"$0":"[0]");var a=l[1]+(legalizedI64s?"$1":"[1]");function o(i){if(legalizedI64s){assert(t.assignTo);var y="var "+t.assignTo+"$0 = "+i[0]+"; var "+t.assignTo+"$1 = "+i[1]+";";t.assignTo=null;return y}else{return i}}function k(i,y){Types.preciseI64MathUsed=true;return o(["(i64Math."+i+"("+w+","+c+","+v+","+a+(y?","+y:"")+"),i64Math.result[0])","i64Math.result[1]"])}switch(j){case"or":return"["+l[0]+"[0] | "+l[1]+"[0], "+l[0]+"[1] | "+l[1]+"[1]]";case"and":return"["+l[0]+"[0] & "+l[1]+"[0], "+l[0]+"[1] & "+l[1]+"[1]]";case"xor":return"["+l[0]+"[0] ^ "+l[1]+"[0], "+l[0]+"[1] ^ "+l[1]+"[1]]";case"shl":case"ashr":case"lshr":if(!isNumber(l[1])){return"Runtime.bitshift64("+l[0]+"[0], "+l[0]+'[1],"'+j+'",'+stripCorrections(l[1])+"[0]|0)"}p=parseInt(l[1]);var m=Math.pow(2,p)-1;if(p<32){switch(j){case"shl":return"["+l[0]+"[0] << "+l[1]+", ("+l[0]+"[1] << "+l[1]+") | (("+l[0]+"[0]&("+m+"<<"+(32-p)+")) >>> (32-"+l[1]+"))]";case"ashr":return"[((("+l[0]+"[0] >>> "+l[1]+") | (("+l[0]+"[1]&"+m+")<<"+(32-p)+")) >> 0) >>> 0,("+l[0]+"[1] >> "+l[1]+") >>> 0]";case"lshr":return"[(("+l[0]+"[0] >>> "+l[1]+") | (("+l[0]+"[1]&"+m+")<<"+(32-p)+")) >>> 0,"+l[0]+"[1] >>> "+l[1]+"]"}}else{if(p==32){switch(j){case"shl":return"[0, "+l[0]+"[0]]";case"ashr":return"["+l[0]+"[1], ("+l[0]+"[1]|0) < 0 ? "+m+" : 0]";case"lshr":return"["+l[0]+"[1], 0]"}}else{switch(j){case"shl":return"[0, "+l[0]+"[0] << "+(p-32)+"]";case"ashr":return"[("+l[0]+"[1] >> "+(p-32)+") >>> 0, ("+l[0]+"[1]|0) < 0 ? "+m+" : 0]";case"lshr":return"["+l[0]+"[1] >>> "+(p-32)+", 0]"}}}case"uitofp":case"sitofp":return RuntimeGenerator.makeBigInt(w,c,j[0]=="u");case"fptoui":case"fptosi":return o(splitI64(l[0]));case"icmp":switch(h){case"uge":return"("+c+">>>0) >= ("+a+">>>0) && (("+c+">>>0) >  ("+a+">>>0) || ("+w+">>>0) >= ("+v+">>>0))";case"sge":return"("+c+"|0) >= ("+a+"|0) && (("+c+"|0) >  ("+a+"|0) || ("+w+">>>0) >= ("+v+">>>0))";case"ule":return"("+c+">>>0) <= ("+a+">>>0) && (("+c+">>>0) <  ("+a+">>>0) || ("+w+">>>0) <= ("+v+">>>0))";case"sle":return"("+c+"|0) <= ("+a+"|0) && (("+c+"|0) <  ("+a+"|0) || ("+w+">>>0) <= ("+v+">>>0))";case"ugt":return"("+c+">>>0) > ("+a+">>>0) || (("+c+">>>0) == ("+a+">>>0) && ("+w+">>>0) >  ("+v+">>>0))";case"sgt":return"("+c+"|0) > ("+a+"|0) || (("+c+"|0) == ("+a+"|0) && ("+w+">>>0) >  ("+v+">>>0))";case"ult":return"("+c+">>>0) < ("+a+">>>0) || (("+c+">>>0) == ("+a+">>>0) && ("+w+">>>0) <  ("+v+">>>0))";case"slt":return"("+c+"|0) < ("+a+"|0) || (("+c+"|0) == ("+a+"|0) && ("+w+">>>0) <  ("+v+">>>0))";case"ne":return w+" != "+v+" || "+c+" != "+a+"";case"eq":return w+" == "+v+" && "+c+" == "+a+"";default:throw"Unknown icmp variant: "+h}case"zext":return makeI64(l[0],0);case"sext":return makeInlineCalculation(makeI64("VALUE","VALUE<0 ? 4294967295 : 0"),l[0],"tempBigIntD");case"trunc":return"(("+l[0]+"[0]) & "+(Math.pow(2,g)-1)+")";case"select":return l[0]+" ? "+makeCopyI64(l[1])+" : "+makeCopyI64(l[2]);case"ptrtoint":return makeI64(l[0],0);case"inttoptr":return"("+l[0]+"[0])";case"add":if(PRECISE_I64_MATH){return k("add")}else{u();return o(splitI64(mergeI64(l[0])+"+"+mergeI64(l[1])))}case"sub":if(PRECISE_I64_MATH){return k("subtract")}else{u();return o(splitI64(mergeI64(l[0])+"-"+mergeI64(l[1])))}case"sdiv":case"udiv":if(PRECISE_I64_MATH){return k("divide",j[0]==="u")}else{u();return o(splitI64(makeRounding(mergeI64(l[0],j[0]==="u")+"/"+mergeI64(l[1],j[0]==="u"),p,j[0]==="s")))}case"mul":if(PRECISE_I64_MATH){return k("multiply")}else{u();return o(splitI64(mergeI64(l[0],j[0]==="u")+"*"+mergeI64(l[1],j[0]==="u")))}case"urem":case"srem":if(PRECISE_I64_MATH){return k("modulo",j[0]==="u")}else{u();return o(splitI64(mergeI64(l[0],j[0]==="u")+"%"+mergeI64(l[1],j[0]==="u")))}case"bitcast":assert(USE_TYPED_ARRAYS==2,"Can only bitcast ints <-> floats with typed arrays mode 2");var b=t.params[0].type;var e=t.type;if(b in Runtime.INT_TYPES&&e in Runtime.FLOAT_TYPES){if(legalizedI64s){return"(tempDoubleI32[0]="+l[0]+"$0, tempDoubleI32[1]="+l[0]+"$1, tempDoubleF64[0])"}else{return makeInlineCalculation("tempDoubleI32[0]=VALUE[0],tempDoubleI32[1]=VALUE[1],tempDoubleF64[0]",l[0],"tempI64")}}else{if(b in Runtime.FLOAT_TYPES&&e in Runtime.INT_TYPES){if(legalizedI64s){return"tempDoubleF64[0]="+l[0]+"; "+o(["tempDoubleI32[0]","tempDoubleI32[1]"])}else{return"(tempDoubleF64[0]="+l[0]+",[tempDoubleI32[0],tempDoubleI32[1]])"}}else{throw"Invalid USE_TYPED_ARRAYS == 2 bitcast: "+dump(t)+" : "+t.params[0].type}}default:throw"Unsupported i64 mode 1 op: "+t.op+" : "+dump(t)}}switch(j){case"add":return handleOverflow(getFastValue(l[0],"+",l[1],t.type),p);case"sub":return handleOverflow(getFastValue(l[0],"-",l[1],t.type),p);case"sdiv":case"udiv":return makeRounding(getFastValue(l[0],"/",l[1],t.type),p,j[0]==="s");case"mul":if(p==32&&PRECISE_I32_MUL){Types.preciseI64MathUsed=true;return"(i64Math.multiply("+l[0]+",0,"+l[1]+",0),i64Math.result[0])"}else{return handleOverflow(getFastValue(l[0],"*",l[1],t.type),p)}case"urem":case"srem":return getFastValue(l[0],"%",l[1],t.type);case"or":if(p>32){assert(p===64,"Too many bits for or: "+p);dprint("Warning: 64 bit OR - precision limit may be hit on llvm line "+t.lineNum);return"Runtime.or64("+l[0]+", "+l[1]+")"}return l[0]+" | "+l[1];case"and":if(p>32){assert(p===64,"Too many bits for and: "+p);dprint("Warning: 64 bit AND - precision limit may be hit on llvm line "+t.lineNum);return"Runtime.and64("+l[0]+", "+l[1]+")"}return l[0]+" & "+l[1];case"xor":if(p>32){assert(p===64,"Too many bits for xor: "+p);dprint("Warning: 64 bit XOR - precision limit may be hit on llvm line "+t.lineNum);return"Runtime.xor64("+l[0]+", "+l[1]+")"}return l[0]+" ^ "+l[1];case"shl":if(p>32){return l[0]+"*"+getFastValue(2,"pow",l[1])}return l[0]+" << "+l[1];case"ashr":if(p>32){return s(l[0]+"/"+getFastValue(2,"pow",l[1]))}if(p===32){return n[0]+" >> "+l[1]}return l[0]+" >> "+l[1];case"lshr":if(p>32){return s(l[0]+"/"+getFastValue(2,"pow",l[1]))}if(p===32){return n[0]+" >>> "+l[1]}return l[0]+" >>> "+l[1];case"fadd":return getFastValue(l[0],"+",l[1],t.type);case"fsub":return getFastValue(l[0],"-",l[1],t.type);case"fdiv":return getFastValue(l[0],"/",l[1],t.type);case"fmul":return getFastValue(l[0],"*",l[1],t.type);case"frem":return getFastValue(l[0],"%",l[1],t.type);case"uitofp":case"sitofp":return l[0];case"fptoui":case"fptosi":return makeRounding(l[0],g,j==="fptosi",true);case"icmp":switch(h){case"uge":case"sge":return l[0]+" >= "+l[1];case"ule":case"sle":return l[0]+" <= "+l[1];case"ugt":case"sgt":return l[0]+" > "+l[1];case"ult":case"slt":return l[0]+" < "+l[1];case"ne":case"eq":assert(f[0]==f[1]);l[0]=makeSignOp(l[0],f[0],"re");l[1]=makeSignOp(l[1],f[1],"re");return l[0]+(h==="eq"?"==":"!=")+l[1];default:throw"Unknown icmp variant: "+h}case"fcmp":switch(h){case"uge":case"oge":return l[0]+" >= "+l[1];case"ule":case"ole":return l[0]+" <= "+l[1];case"ugt":case"ogt":return l[0]+" > "+l[1];case"ult":case"olt":return l[0]+" < "+l[1];case"une":case"one":return l[0]+" != "+l[1];case"ueq":case"oeq":return l[0]+" == "+l[1];case"ord":return"!isNaN("+l[0]+") && !isNaN("+l[1]+")";case"uno":return"isNaN("+l[0]+") || isNaN("+l[1]+")";case"true":return"1";default:throw"Unknown fcmp variant: "+h}case"zext":case"fpext":case"sext":return l[0];case"fptrunc":return l[0];case"select":return l[0]+" ? "+l[1]+" : "+l[2];case"ptrtoint":case"inttoptr":var x="";if(QUANTUM_SIZE==1){warnOnce(".ll contains ptrtoint and/or inttoptr. These may be dangerous in QUANTUM == 1. The safest thing is to investigate every appearance, and modify the source code to avoid this. Emscripten will print a list of the .ll lines, and also annotate the .js.");dprint("  "+j+" on .ll line "+t.lineNum);l[0]+=" /* Warning: "+j+", .ll line "+t.lineNum+" */"}if(j=="inttoptr"||g>=32){return l[0]}case"trunc":assert(g<=32,"Cannot truncate to more than 32 bits, since we use a native & op");return"(("+l[0]+") & "+(Math.pow(2,g)-1)+")";case"bitcast":var b=t.params[0].type;var e=t.type;if((b in Runtime.INT_TYPES&&e in Runtime.FLOAT_TYPES)||(b in Runtime.FLOAT_TYPES&&e in Runtime.INT_TYPES)){assert(USE_TYPED_ARRAYS==2,"Can only bitcast ints <-> floats with typed arrays mode 2");if(b in Runtime.INT_TYPES){return"(tempDoubleI32[0] = "+l[0]+",tempDoubleF32[0])"}else{return"(tempDoubleF32[0] = "+l[0]+",tempDoubleI32[0])"}}return l[0];default:throw"Unknown mathcmp op: "+t.op}}function walkInterdata(d,f,b,e){if(!d||!d.intertype){return false}if(f&&f(d,e)){return true}var g=e;if(e&&e.replaceWith){e=e.replaceWith}if(d.value&&walkInterdata(d.value,f,b,e)){return true}if(d.dependent&&walkInterdata(d.dependent,f,b,e)){return true}var a;if(d.params){for(a=0;a<=d.params.length;a++){if(walkInterdata(d.params[a],f,b,e)){return true}}}if(d.possibleVars){var c={intertype:"value",ident:""};for(a=0;a<=d.possibleVars.length;a++){c.ident=d[d.possibleVars[a]];if(walkInterdata(c,f,b,e)){return true}}}return b&&b(d,g,e)}function walkAndModifyInterdata(c,e){if(!c||!c.intertype){return false}var a=e(c);if(a){return a}var d;if(c.value&&(d=walkAndModifyInterdata(c.value,e))){c.value=d}if(c.pointer&&(d=walkAndModifyInterdata(c.pointer,e))){c.pointer=d}if(c.dependent&&(d=walkAndModifyInterdata(c.dependent,e))){c.dependent=d}if(c.params){for(var b=0;b<=c.params.length;b++){if(d=walkAndModifyInterdata(c.params[b],e)){c.params[b]=d}}}}function parseBlockAddress(a){return{intertype:"blockaddress",func:toNiceIdent(a[2].item.tokens[0].text),label:toNiceIdent(a[2].item.tokens[2].text),type:"i32"}}function finalizeBlockAddress(a){return"{{{ BA_"+a.func+"|"+a.label+" }}}"}function stripCorrections(b){var a;while(true){if(a=/^\((.*)\)$/.exec(b)){b=a[1];continue}if(a=/^\(([$_\w]+)\)&\d+$/.exec(b)){b=a[1];continue}if(a=/^\(([$_\w()]+)\)\|0$/.exec(b)){b=a[1];continue}if(a=/^\(([$_\w()]+)\)\>>>0$/.exec(b)){b=a[1];continue}if(a=/CHECK_OVERFLOW\(([^,)]*),.*/.exec(b)){b=a[1];continue}break}return b};