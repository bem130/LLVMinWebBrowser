try{gcparam("maxBytes",1024*1024*1024)}catch(e){}var arguments_=[];var ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function";var ENVIRONMENT_IS_WEB=typeof window==="object";var ENVIRONMENT_IS_WORKER=typeof importScripts==="function";var ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;if(ENVIRONMENT_IS_NODE){print=function(a){process.stdout.write(a+"\n")};printErr=function(a){process.stderr.write(a+"\n")};var nodeFS=require("fs");var nodePath=require("path");if(!nodeFS.existsSync){nodeFS.existsSync=function(b){try{return !!nodeFS.readFileSync(b)}catch(a){return false}}}function find(a){var d=[__dirname,process.cwd()];for(var c=0;c<d.length;++c){var b=nodePath.join(d[c],a);if(nodeFS.existsSync(b)){return b}}return a}read=function(a){var b=find(a);return nodeFS.readFileSync(b).toString()};load=function(a){globalEval(read(a))};arguments_=process.argv.slice(2)}else{if(ENVIRONMENT_IS_SHELL){if(!this["read"]){this["read"]=function(a){snarf(a)}}if(typeof scriptArgs!="undefined"){arguments_=scriptArgs}else{if(typeof arguments!="undefined"){arguments_=arguments}}}else{if(ENVIRONMENT_IS_WEB){printErr=function(a){console.log(a)};if(!this["print"]){this["print"]=printErr}this["read"]=function(a){var b=new XMLHttpRequest();b.open("GET",a,false);b.send(null);return b.responseText};if(this["arguments"]){arguments_=arguments}}else{if(ENVIRONMENT_IS_WORKER){this["load"]=importScripts}else{throw"Unknown runtime environment. Where are we?"}}}}function globalEval(x){eval.call(null,x)}if(typeof load=="undefined"&&typeof read!="undefined"){this["load"]=function(a){globalEval(read(a))}}if(typeof printErr==="undefined"){this["printErr"]=function(){}}if(typeof print==="undefined"){this["print"]=printErr}load("utility.js");load("settings.js");var settings_file=arguments_[0];var ll_file=arguments_[1];phase=arguments_[2];if(phase=="pre"){additionalLibraries=Array.prototype.slice.call(arguments_,3)}else{var forwardedDataFile=arguments_[3];additionalLibraries=Array.prototype.slice.call(arguments_,4)}if(settings_file){var settings=JSON.parse(read(settings_file));for(setting in settings){eval(setting+" = "+JSON.stringify(settings[setting]))}}if(CORRECT_SIGNS>=2){CORRECT_SIGNS_LINES=set(CORRECT_SIGNS_LINES)}if(CORRECT_OVERFLOWS>=2){CORRECT_OVERFLOWS_LINES=set(CORRECT_OVERFLOWS_LINES)}if(CORRECT_ROUNDINGS>=2){CORRECT_ROUNDINGS_LINES=set(CORRECT_ROUNDINGS_LINES)}if(SAFE_HEAP>=2){SAFE_HEAP_LINES=set(SAFE_HEAP_LINES)}if(PGO){CORRECT_SIGNS=CORRECT_SIGNS||1;CORRECT_OVERFLOWS=CORRECT_OVERFLOWS||1;CORRECT_ROUNDINGS=CORRECT_ROUNDINGS||1}EXPORTED_FUNCTIONS=set(EXPORTED_FUNCTIONS);EXPORTED_GLOBALS=set(EXPORTED_GLOBALS);RUNTIME_DEBUG=LIBRARY_DEBUG||GL_DEBUG;assert(!(USE_TYPED_ARRAYS===2&&QUANTUM_SIZE!==4),"For USE_TYPED_ARRAYS == 2, must have normal QUANTUM_SIZE of 4");if(!MICRO_OPTS||!RELOOP||ASSERTIONS||CHECK_SIGNS||CHECK_OVERFLOWS||INIT_STACK||INIT_HEAP||!SKIP_STACK_IN_SMALL||SAFE_HEAP||PGO||PROFILE||!DISABLE_EXCEPTION_CATCHING){print("// Note: Some Emscripten settings will significantly limit the speed of the generated code.")}else{print('// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code')}if(DOUBLE_MODE||CORRECT_SIGNS||CORRECT_OVERFLOWS||CORRECT_ROUNDINGS){print("// Note: Some Emscripten settings may limit the speed of the generated code.")}load("framework.js");load("modules.js");load("parseTools.js");load("intertyper.js");load("analyzer.js");load("jsifier.js");if(RELOOP){load("relooper.js")}globalEval(processMacros(preprocess(read("runtime.js"))));Runtime.QUANTUM_SIZE=QUANTUM_SIZE;var temp={};for(var i=0;i<NECESSARY_BLOCKADDRS.length;i++){var func=toNiceIdent(NECESSARY_BLOCKADDRS[i][0]);var label=toNiceIdent(NECESSARY_BLOCKADDRS[i][1]);if(!temp[func]){temp[func]={}}temp[func][label]=1}NECESSARY_BLOCKADDRS=temp;function compile(c){if(FAKE_X86_FP80){c=c.replace(/x86_fp80/g,"double")}if(c.search("\r\n")>=0){c=c.replace(/\r\n/g,"\n")}var b=c.split("\n");c=null;Debugging.handleMetadata(b);function a(g){phase=g;if(phase!="pre"){if(singlePhase){PassManager.load(read(forwardedDataFile))}if(phase=="funcs"){PreProcessor.eliminateUnneededIntrinsics(b)}}var f=intertyper(b);if(singlePhase){b=null}var d=analyzer(f);f=null;JSify(d);phase=null;if(DEBUG_MEMORY){print("zzz. last gc: "+gc());MemoryDebugger.dump();print("zzz. hanging now!");while(1){}}}singlePhase=!!phase;if(singlePhase){a(phase)}else{a("pre");a("funcs");a("post")}}if(ll_file){if(ll_file.indexOf(String.fromCharCode(10))==-1){compile(read(ll_file))}else{compile(ll_file)}};