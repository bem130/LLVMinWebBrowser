var tokenizer;function tokenize(a){return tokenizer.processItem({lineText:a},true)}var ENCLOSER_STARTERS=set("[","(","<");var ENCLOSER_ENDERS={"[":"]","(":")","<":">"};var ZEROINIT_UNDEF=set("zeroinitializer","undef");var NSW_NUW=set("nsw","nuw");function intertyper(c,d,h){var k=!d;h=h||[[0,0]];dprint("framework","Big picture: Starting intertyper, main pass="+k);var j=new Substrate("Intertyper");j.addActor("LineSplitter",{processItem:function i(B){var m=B.llvmLines;var C=[];var y=false;var q=false;var p;var v;var n=[];var D,s;if(k){D={intertype:"unparsedTypes",lines:[]};n.push(D);s={intertype:"unparsedGlobals",lines:[]};n.push(s)}var w=0;for(var A=0;A<m.length;A++){var u=m[A];if(singlePhase){m[A]=null}while(w<h.length-1&&A>=h[w+1][0]){w++}if(k&&(u[0]=="%"||u[0]=="@")){var x=/[@%\w\d\.\" $-]+ = type .*/.exec(u);if(!x){var z=/([@%\w\d\.\" $-]+) = .*/.exec(u);var o=toNiceIdent(z[1]);var t=/[@%\w\d\.\" $-]+ = (hidden )?alias .*/.exec(u);Variables.globals[o]={name:o,alias:!!t,impl:VAR_EMULATED};s.lines.push(u)}else{D.lines.push(u)}continue}if(k&&/^define .*/.test(u)){q=true;p=[];v=A+1}if(!q||!k){if(y||/^\ +(to|catch |filter |cleanup).*/.test(u)){C.slice(-1)[0].lineText+=u;if(/^\ +\]/.test(u)){y=false}}else{C.push({lineText:u,lineNum:A+1+h[w][1]-h[w][0]});if(/^\ +switch\ .*/.test(u)){y=true}}}else{p.push(u)}if(k&&/^}.*/.test(u)){q=false;if(k){var r=a.processItem(tokenizer.processItem({lineText:p[0],lineNum:v},true))[0];if(SKIP_STACK_IN_SMALL&&/emscripten_autodebug/.exec(r.ident)){warnOnce("Disabling SKIP_STACK_IN_SMALL because we are apparently processing autodebugger data");SKIP_STACK_IN_SMALL=0}n.push({intertype:"unparsedFunction",ident:toNiceIdent(r.ident),params:r.params,hasVarArgs:r.hasVarArgs,lineNum:v,lines:p});p=[]}}}this.forwardItems(C.filter(function(E){return E.lineText&&(E.lineText[0]!=";"||!k)}),"Tokenizer");return n}});tokenizer=j.addActor("Tokenizer",{processItem:function l(E,G){var w=[];var y=0;var C=null;var r=64;var o={"[":0,"]":"[","(":0,")":"(","<":0,">":"<"};var n=0;var t=this;function u(J){if(J.length==0){return}if(C&&((C.text=="%"&&J[0]=='"')||/^\**$/.test(J))){C.text+=J;return}var H={text:J};if(J[0] in o){H.item=t.processItem({lineText:J.substr(1,J.length-2)},true);H.type=J[0]}if(C&&isType(C.text)&&isFunctionDef(H)){C.text+=" "+J}else{if(C&&J[0]=="}"){var I=w.length-1;while(w[I].text.substr(-1)!="{"){I--}H=combineTokens(w.slice(I+1));w.splice(I,w.length-I+1);w.push(H);H.type="{";H.text="{ "+H.text+" }";var s=pointingLevels(J)-pointingLevels(H.text);while(s>0){H.text+="*";s--}C=H}else{w.push(H);C=H}}}var p=E.lineText+" ";var x=/[\[\]\(\)<>, "]/g;var z=p.split(x);z.pop();var B=z.length;var A=-1;var D="";var m,F;for(var v=0;v<B;v++){m=z[v];A+=m.length+1;F=p[A];D+=m;switch(F){case" ":if(n==0&&y==0){u(D);D=""}else{D+=" "}break;case'"':if(n==0){if(y==0){if(D=="@"||D=="%"){D+='"'}else{u(D);D='"'}}else{u(D+'"');D=""}}else{D+='"'}y=1-y;break;case",":if(n==0&&y==0){u(D);D="";w.push({text:","})}else{D+=","}break;default:assert(F in o);if(y){D+=F;break}if(F in ENCLOSER_STARTERS){if(n==0){u(D);D=""}D+=F;o[F]++;n++}else{o[o[F]]--;n--;if(n==0){u(D+F);D=""}else{D+=F}}}}var q={tokens:w,indent:p.search(/[^ ]/),lineNum:E.lineNum};if(G){return q}else{this.forwardItem(q,"Triager")}return null}});j.addActor("Triager",{processItem:function g(o){function n(){assert(!o.intertype);var p=o.tokens[0].text;var q=o.tokens[1]?o.tokens[1].text:null;var r=o.tokens.length;if(o.indent===2){if(r>=5&&(p=="store"||q=="store")){return"Store"}if(r>=3&&p=="br"){return"Branch"}if(r>=2&&p=="ret"){return"Return"}if(r>=2&&p=="switch"){return"Switch"}if(p=="unreachable"){return"Unreachable"}if(r>=3&&p=="indirectbr"){return"IndirectBr"}if(r>=2&&p=="resume"){return"Resume"}if(r>=3&&(p=="load"||q=="load")){return"Load"}if(r>=3&&p in MATHOPS){return"Mathops"}if(r>=3&&p=="bitcast"){return"Bitcast"}if(r>=3&&p=="getelementptr"){return"GEP"}if(r>=2&&p=="alloca"){return"Alloca"}if(r>=3&&p=="extractvalue"){return"ExtractValue"}if(r>=3&&p=="insertvalue"){return"InsertValue"}if(r>=3&&p=="phi"){return"Phi"}if(r>=3&&p=="landingpad"){return"Landingpad"}if(p=="fence"){return"/dev/null"}}else{if(o.indent===0){if((r>=1&&p.substr(-1)==":")||(r>=3&&q=="<label>")||(r>=2&&q==":")){return"Label"}if(r>=4&&p=="declare"){return"External"}if(r>=3&&q=="="){return"Global"}if(r>=4&&p=="define"&&o.tokens.slice(-1)[0].text=="{"){return"FuncHeader"}if(r>=1&&p=="}"){return"FuncEnd"}if(p=="module"&&q=="asm"){warn("Ignoring module asm: "+o.tokens[2].text);return"/dev/null"}}}if(r>=3&&(p=="call"||q=="call")){return"Call"}if(p=="target"){return"/dev/null"}if(p==";"){return"/dev/null"}if(r>=3&&p=="invoke"){return"Invoke"}if(r>=3&&p=="atomicrmw"||p=="cmpxchg"){return"Atomic"}throw"Invalid token, cannot triage: "+dump(o)}var m;if(o.indent==2&&(m=findTokenText(o,"="))>=0){o.assignTo=toNiceIdent(combineTokens(o.tokens.slice(0,m)).text);o.tokens=o.tokens.slice(m+1)}this.forwardItem(o,n())}});j.addActor("Global",{processItem:function f(w){function o(A,y){function x(B){function C(D){if(D[1].text=="null"){return{intertype:"value",ident:"0",type:"i32"}}else{if(D[1].text=="zeroinitializer"){Types.needAnalysis[D[0].text]=0;return{intertype:"emptystruct",type:D[0].text}}else{if(D[1].text in PARSABLE_LLVM_FUNCTIONS){return parseLLVMFunctionCall(D)}else{if(D[1].type&&D[1].type=="{"){Types.needAnalysis[D[0].text]=0;return{intertype:"struct",type:D[0].text,contents:x(D[1].tokens)}}else{if(D[1].type&&D[1].type=="<"){Types.needAnalysis[D[0].text]=0;return{intertype:"struct",type:D[0].text,contents:x(D[1].item.tokens[0].tokens)}}else{if(D[1].type&&D[1].type=="["){Types.needAnalysis[D[0].text]=0;return{intertype:"list",type:D[0].text,contents:x(D[1].item.tokens)}}else{if(D.length==2){Types.needAnalysis[D[0].text]=0;return{intertype:"value",type:D[0].text,ident:toNiceIdent(D[1].text)}}else{if(D[1].text==="c"){var E=D[2].text;E=E.substr(1,E.length-2);return{intertype:"string",text:E,type:"i8*"}}else{if(D[1].text==="blockaddress"){return parseBlockAddress(D)}else{throw"Invalid segment: "+dump(D)}}}}}}}}}}return splitTokenList(B).map(C)}Types.needAnalysis[y]=0;if(Runtime.isNumberType(y)||pointingLevels(y)>=1){return{value:toNiceIdent(A.text),type:y}}else{if(A.text in ZEROINIT_UNDEF){return{intertype:"emptystruct",type:y}}else{if(A.text&&A.text[0]=='"'){return{intertype:"string",text:A.text.substr(1,A.text.length-2)}}else{if(A.type=="<"){A=A.item.tokens}var z;if(A.item){z=A.item.tokens}else{if(A.type=="{"){z=A.tokens}else{if(A[0]){z=A[0]}else{throw"// interfailzzzzzzzzzzzzzz "+dump(A.item)+" ::: "+dump(A)}}}return{intertype:"segments",contents:x(z)}}}}}cleanOutTokens(LLVM.VISIBILITIES,w.tokens,2);if(w.tokens[2].text=="alias"){cleanOutTokens(LLVM.LINKAGES,w.tokens,3);cleanOutTokens(LLVM.VISIBILITIES,w.tokens,3);var u=getTokenIndexByText(w.tokens,";");var r={intertype:"alias",ident:toNiceIdent(w.tokens[0].text),value:parseLLVMSegment(w.tokens.slice(3,u)),lineNum:w.lineNum};r.type=r.value.type;Types.needAnalysis[r.type]=0;if(!NAMED_GLOBALS){Variables.globals[r.ident].type=r.type}return[r]}if(w.tokens[2].text=="type"){var p=[];var v=false;if(Runtime.isNumberType(w.tokens[3].text)){p=[w.tokens[3].text]}else{if(w.tokens[3].text!="opaque"){if(w.tokens[3].type=="<"){v=true;w.tokens[3]=w.tokens[3].item.tokens[0]}var s=w.tokens[3].tokens;if(s){s.push({text:","});while(s[0]){var t=1;while([","].indexOf(s[t].text)==-1){t++}p.push(combineTokens(s.slice(0,t)).text);s.splice(0,t+1)}}}}return[{intertype:"type",name_:w.tokens[0].text,fields:p,packed:v,lineNum:w.lineNum}]}else{var n=w.tokens[0].text;var m=findTokenText(w,"private")>=0;cleanOutTokens(LLVM.GLOBAL_MODIFIERS,w.tokens,[2,3]);var q=false;if(w.tokens[2].text==="external"){q=true;w.tokens.splice(2,1)}Types.needAnalysis[w.tokens[2].text]=0;var r={intertype:"globalVariable",ident:toNiceIdent(n),type:w.tokens[2].text,external:q,private_:m,lineNum:w.lineNum};if(!NAMED_GLOBALS){Variables.globals[r.ident].type=r.type;Variables.globals[r.ident].external=q}Types.needAnalysis[r.type]=0;if(n=="@llvm.global_ctors"){r.ctors=[];if(w.tokens[3].item){var s=w.tokens[3].item.tokens;splitTokenList(s).forEach(function(x){r.ctors.push(x[1].tokens.slice(-1)[0].text)})}}else{if(!q){if(w.tokens[3].text=="c"){w.tokens.splice(3,1)}if(w.tokens[3].text in PARSABLE_LLVM_FUNCTIONS){r.value=parseLLVMFunctionCall(w.tokens.slice(2))}else{r.value=o(w.tokens[3],r.type)}}}return[r]}}});var a=j.addActor("FuncHeader",{processItem:function(m){m.tokens=m.tokens.filter(function(o){return !(o.text in LLVM.LINKAGES||o.text in LLVM.PARAM_ATTR||o.text in LLVM.FUNC_ATTR||o.text in LLVM.CALLING_CONVENTIONS)});var n=parseParamTokens(m.tokens[2].item.tokens);if(d){dprint("unparsedFunctions","Processing function: "+m.tokens[1].text)}return[{intertype:"function",ident:toNiceIdent(m.tokens[1].text),returnType:m.tokens[0].text,params:n,hasVarArgs:hasVarArgs(n),lineNum:m.lineNum}]}});j.addActor("Label",{processItem:function(n){var m=n.tokens[0].text.substr(-1)==":"?"%"+n.tokens[0].text.substr(0,n.tokens[0].text.length-1):(n.tokens[1].text=="<label>"?"%"+n.tokens[2].text.substr(1):"%"+n.tokens[0].text);var o=toNiceIdent(m);return[{intertype:"label",ident:o,lineNum:n.lineNum}]}});j.addActor("Reintegrator",{processItem:function(m){this.forwardItem(m,"/dev/stdout")}});j.addActor("Load",{processItem:function(o){o.intertype="load";cleanOutTokens(LLVM.ACCESS_OPTIONS,o.tokens,[0,1]);o.pointerType=o.tokens[1].text;o.valueType=o.type=removePointing(o.pointerType);Types.needAnalysis[o.type]=0;var n=getTokenIndexByText(o.tokens,";");var m=splitTokenList(o.tokens.slice(1,n));o.pointer=parseLLVMSegment(m[0]);if(m.length>1){assert(m[1][0].text=="align");o.align=parseInt(m[1][1].text)||QUANTUM_SIZE}else{o.align=QUANTUM_SIZE}o.ident=o.pointer.ident||null;this.forwardItem(o,"Reintegrator")}});j.addActor("ExtractValue",{processItem:function(n){var m=getTokenIndexByText(n.tokens,";");n.intertype="extractvalue";n.type=n.tokens[1].text;Types.needAnalysis[n.type]=0;n.ident=toNiceIdent(n.tokens[2].text);n.indexes=splitTokenList(n.tokens.slice(4,m));this.forwardItem(n,"Reintegrator")}});j.addActor("InsertValue",{processItem:function(o){var n=getTokenIndexByText(o.tokens,";");o.intertype="insertvalue";o.type=o.tokens[1].text;Types.needAnalysis[o.type]=0;o.ident=toNiceIdent(o.tokens[2].text);var m=splitTokenList(o.tokens.slice(4,n));o.value=parseLLVMSegment(m[0]);o.indexes=m.slice(1);this.forwardItem(o,"Reintegrator")}});j.addActor("Bitcast",{processItem:function(m){m.intertype="bitcast";m.type=m.tokens[4].text;Types.needAnalysis[m.type]=0;var n=getTokenIndexByText(m.tokens,"to");m.params=[parseLLVMSegment(m.tokens.slice(1,n))];m.ident=m.params[0].ident;m.type2=m.tokens[1].text;Types.needAnalysis[m.type2]=0;this.forwardItem(m,"Reintegrator")}});j.addActor("GEP",{processItem:function(o){var q=0;while(!isType(o.tokens[q].text)){q++}Types.needAnalysis[o.tokens[q].text]=0;var n=getTokenIndexByText(o.tokens,";");var m=[o.tokens[q],{text:"getelementptr"},null,{item:{tokens:o.tokens.slice(q,n)}}];var p=parseLLVMFunctionCall(m);o.intertype="getelementptr";o.type="*";o.params=p.params;o.ident=p.ident;this.forwardItem(o,"Reintegrator")}});function e(o,n){o.intertype=n;if(["tail"].indexOf(o.tokens[0].text)!=-1){o.tokens.splice(0,1)}while(o.tokens[1].text in LLVM.PARAM_ATTR||o.tokens[1].text in LLVM.CALLING_CONVENTIONS){o.tokens.splice(1,1)}o.type=o.tokens[1].text;Types.needAnalysis[o.type]=0;while(["@","%"].indexOf(o.tokens[2].text[0])==-1&&!(o.tokens[2].text in PARSABLE_LLVM_FUNCTIONS)&&o.tokens[2].text!="null"&&o.tokens[2].text!="asm"){assert(o.tokens[2].text!="asm","Inline assembly cannot be compiled to JavaScript!");o.tokens.splice(2,1)}var m=o.tokens.slice(2);o.ident=eatLLVMIdent(m);if(o.ident=="asm"){o.intertype="value";if(m[0].text=="sideeffect"){m.splice(0,1)}o.ident=m[0].text.substr(1,m[0].text.length-2)||";";return{forward:null,ret:[o],item:o}}if(o.ident.substr(-2)=="()"){o.ident=o.ident.substr(0,o.ident.length-2);while(o.ident[o.ident.length-1]==" "){o.ident=o.ident.substr(0,o.ident.length-1)}o.params=[]}else{o.params=parseParamTokens(m[0].item.tokens)}o.ident=toNiceIdent(o.ident);if(n==="invoke"){var p=findTokenText(o,"to");o.toLabel=toNiceIdent(o.tokens[p+2].text);o.unwindLabel=toNiceIdent(o.tokens[p+5].text);assert(o.toLabel&&o.unwindLabel)}if(o.indent==2){o.standalone=true;return{forward:null,ret:[o],item:o}}return{forward:o,ret:[],item:o}}j.addActor("Call",{processItem:function(n){var m=e.call(this,n,"call");if(m.forward){this.forwardItem(m.forward,"Reintegrator")}return m.ret}});j.addActor("Invoke",{processItem:function(n){var m=e.call(this,n,"invoke");if(DISABLE_EXCEPTION_CATCHING){m.item.intertype="call";m.ret.push({intertype:"branch",label:m.item.toLabel,lineNum:(m.forward?n.parentLineNum:n.lineNum)+0.5})}if(m.forward){this.forwardItem(m.forward,"Reintegrator")}return m.ret}});j.addActor("Atomic",{processItem:function(n){n.intertype="atomic";if(n.tokens[0].text=="atomicrmw"){n.op=n.tokens[1].text;n.tokens.splice(1,1)}else{assert(n.tokens[0].text=="cmpxchg");n.op="cmpxchg"}var m=getTokenIndexByText(n.tokens,";");n.params=splitTokenList(n.tokens.slice(1,m)).map(parseLLVMSegment);this.forwardItem(n,"Reintegrator")}});j.addActor("Landingpad",{processItem:function(o){o.intertype="landingpad";o.type=o.tokens[1].text;o.catchables=[];var n=findTokenText(o,"catch");if(n!=-1){do{var m=findTokenTextAfter(o,"catch",n+1);if(m==-1){m=o.tokens.length}o.catchables.push(parseLLVMSegment(o.tokens.slice(n+2,m)));n=m}while(n!=o.tokens.length)}Types.needAnalysis[o.type]=0;this.forwardItem(o,"Reintegrator")}});var b=["allocatedNum"];j.addActor("Alloca",{processItem:function(m){m.intertype="alloca";m.allocatedType=m.tokens[1].text;if(m.tokens.length>3&&Runtime.isNumberType(m.tokens[3].text)){m.allocatedNum=toNiceIdent(m.tokens[4].text);m.possibleVars=b}else{m.allocatedNum=1}m.type=addPointing(m.tokens[1].text);Types.needAnalysis[m.type]=0;m.type2=m.tokens[1].text;Types.needAnalysis[m.type2]=0;this.forwardItem(m,"Reintegrator")}});j.addActor("Phi",{processItem:function(o){o.intertype="phi";o.type=o.tokens[1].text;var m=[o.tokens[1]];Types.needAnalysis[o.type]=0;var n=getTokenIndexByText(o.tokens,";");o.params=splitTokenList(o.tokens.slice(2,n)).map(function(q){var r=splitTokenList(q[0].item.tokens);var p={intertype:"phiparam",label:toNiceIdent(r[1][0].text),value:parseLLVMSegment(m.concat(r[0]))};return p}).filter(function(p){return p.value&&p.value.ident!="undef"});this.forwardItem(o,"Reintegrator")}});j.addActor("Mathops",{processItem:function(o){o.intertype="mathop";o.op=o.tokens[0].text;o.variant=null;while(o.tokens[1].text in NSW_NUW){o.tokens.splice(1,1)}if(["icmp","fcmp"].indexOf(o.op)!=-1){o.variant=o.tokens[1].text;o.tokens.splice(1,1)}if(o.tokens[1].text=="exact"){o.tokens.splice(1,1)}var m=splitTokenList(o.tokens.slice(1));o.params=[];for(var n=1;n<=4;n++){if(m[n-1]){if(n>1&&m[n-1].length==1&&m[0].length>1&&!isType(m[n-1][0].text)){m[n-1].unshift(m[0][0])}o.params[n-1]=parseLLVMSegment(m[n-1])}}if(o.op==="select"){assert(o.params[1].type===o.params[2].type);o.type=o.params[1].type}else{if(o.op==="inttoptr"||o.op==="ptrtoint"){o.type=o.params[1].type}else{o.type=o.params[0].type}}if(o.op!="ptrtoint"){for(var n=0;n<4;n++){if(o.params[n]){o.params[n].type=o.type}}}if(o.op in LLVM.EXTENDS){o.type=o.params[1].ident;o.params[0].type=o.params[1].type}if(USE_TYPED_ARRAYS==2){if(o.op in LLVM.SHIFTS){o.params[1].type="i32"}else{if(o.op=="select"){o.params[0].type="i1"}}}Types.needAnalysis[o.type]=0;this.forwardItem(o,"Reintegrator")}});j.addActor("Store",{processItem:function(o){cleanOutTokens(LLVM.ACCESS_OPTIONS,o.tokens,[0,1]);var n=splitTokenList(o.tokens.slice(1));var m={intertype:"store",valueType:o.tokens[1].text,value:parseLLVMSegment(n[0]),pointer:parseLLVMSegment(n[1]),lineNum:o.lineNum};Types.needAnalysis[m.valueType]=0;m.ident=toNiceIdent(m.pointer.ident);m.pointerType=m.pointer.type;Types.needAnalysis[m.pointerType]=0;if(n.length>2){assert(n[2][0].text=="align");m.align=parseInt(n[2][1].text)||QUANTUM_SIZE}else{m.align=QUANTUM_SIZE}return[m]}});j.addActor("Branch",{processItem:function(m){if(m.tokens[1].text=="label"){return[{intertype:"branch",label:toNiceIdent(m.tokens[2].text),lineNum:m.lineNum}]}else{var n=findTokenText(m,",");return[{intertype:"branch",value:parseLLVMSegment(m.tokens.slice(1,n)),labelTrue:toNiceIdent(m.tokens[n+2].text),labelFalse:toNiceIdent(m.tokens[n+5].text),lineNum:m.lineNum}]}}});j.addActor("Return",{processItem:function(n){var m=n.tokens[1].text;Types.needAnalysis[m]=0;return[{intertype:"return",type:m,value:(n.tokens[2]&&m!=="void")?parseLLVMSegment(n.tokens.slice(1)):null,lineNum:n.lineNum}]}});j.addActor("Resume",{processItem:function(m){return[{intertype:"resume",ident:toNiceIdent(m.tokens[2].text),lineNum:m.lineNum}]}});j.addActor("Switch",{processItem:function(n){function o(q){var p=[];var r=q.item.tokens;while(r.length>0){p.push({value:r[1].text,label:toNiceIdent(r[4].text)});r=r.slice(5)}return p}var m=n.tokens[1].text;Types.needAnalysis[m]=0;return[{intertype:"switch",type:m,ident:toNiceIdent(n.tokens[2].text),defaultLabel:toNiceIdent(n.tokens[5].text),switchLabels:o(n.tokens[6]),lineNum:n.lineNum}]}});j.addActor("FuncEnd",{processItem:function(m){return[{intertype:"functionEnd",lineNum:m.lineNum}]}});j.addActor("External",{processItem:function(m){while(m.tokens[1].text in LLVM.LINKAGES||m.tokens[1].text in LLVM.PARAM_ATTR||m.tokens[1].text in LLVM.VISIBILITIES||m.tokens[1].text in LLVM.CALLING_CONVENTIONS){m.tokens.splice(1,1)}var n=parseParamTokens(m.tokens[3].item.tokens);return[{intertype:"functionStub",ident:toNiceIdent(m.tokens[2].text),returnType:m.tokens[1],params:n,hasVarArgs:hasVarArgs(n),lineNum:m.lineNum}]}});j.addActor("Unreachable",{processItem:function(m){return[{intertype:"unreachable",lineNum:m.lineNum}]}});j.addActor("IndirectBr",{processItem:function(n){var m={intertype:"indirectbr",value:parseLLVMSegment(splitTokenList(n.tokens.slice(1))[0]),type:n.tokens[1].text,lineNum:n.lineNum};Types.needAnalysis[m.type]=0;return[m]}});j.addItem({llvmLines:c},"LineSplitter");j.onResult=function(m){if(m.tokens){m.tokens=null}};return j.solve()};