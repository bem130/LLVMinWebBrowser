var VAR_NATIVE="native";var VAR_NATIVIZED="nativized";var VAR_EMULATED="emulated";var ENTRY_IDENT=toNiceIdent("%0");var ENTRY_IDENT_IDS=set(0,1);function recomputeLines(a){a.lines=a.labels.map(function(b){return b.lines}).reduce(concatenator,[])}var BRANCH_INVOKE=set("branch","invoke");var SIDE_EFFECT_CAUSERS=set("call","invoke","atomic");var UNUNFOLDABLE=set("value","type","phiparam");function analyzer(g,f){var a=!f;var e=new Substrate("Analyzer");e.addActor("Sorter",{processItem:function(i){i.items.sort(function(k,j){return k.lineNum-j.lineNum});this.forwardItem(i,"Gatherer")}});e.addActor("Gatherer",{processItem:function(l){["globalVariable","functionStub","unparsedFunction","unparsedGlobals","unparsedTypes","alias"].forEach(function(o){var i=splitter(l.items,function(p){return p.intertype==o});l.items=i.leftIn;l[o+"s"]=i.splitOut});var j=splitter(l.items,function(i){return i.intertype=="type"});l.items=j.leftIn;j.splitOut.forEach(function(i){Types.types[i.name_]=i;if(QUANTUM_SIZE===1){Types.fatTypes[i.name_]=copy(i)}});l.functions=[];var m;l.items.sort(function(o,i){return o.lineNum-i.lineNum});for(var k=0;k<l.items.length;k++){var n=l.items[k];assert(n.lineNum);if(n.intertype=="function"){l.functions.push(n);n.endLineNum=null;n.lines=[];n.labels=[];n.forceEmulated=false;if(l.items[k+1].intertype!=="label"){l.items.splice(k+1,0,{intertype:"label",ident:ENTRY_IDENT,lineNum:n.lineNum+".5"})}}else{if(n.intertype=="functionEnd"){l.functions.slice(-1)[0].endLineNum=n.lineNum}else{if(n.intertype=="label"){l.functions.slice(-1)[0].labels.push(n);n.lines=[];m=false}else{if(l.functions.length>0&&l.functions.slice(-1)[0].endLineNum===null){if(!m){l.functions.slice(-1)[0].labels.slice(-1)[0].lines.push(n);if(n.intertype==="branch"){m=true}}else{print("// WARNING: content after a branch in a label, line: "+n.lineNum)}}else{throw"ERROR: what is this? "+dump(n)}}}}}delete l.items;this.forwardItem(l,"Legalizer")}});e.addActor("Legalizer",{processItem:function(n){if(USE_TYPED_ARRAYS==2){function m(s,r){assert(!isNumber(s));var p=new Array(Math.ceil(r/32));var q=0;while(r>0){p[q]={ident:s+"$"+q,bits:Math.min(32,r)};r-=32;q++}return p}function i(t,s){var p=parseArbitraryInt(t,s);var q=new Array(Math.ceil(s/32));var r=0;while(s>0){q[r]={ident:(p[r]|0).toString(),bits:Math.min(32,s)};s-=32;r++}return q}function k(p,t,s){var v=t>=0?p[t].lineNum:-1;var u=(t<p.length-1)?p[t+1].lineNum:(p[t].lineNum+0.5);var r=(u-v)/(4*s.length+3);for(var q=0;q<s.length;q++){s[q].lineNum=v+((q+1)*r)}}function l(p,r,q){var s=p[r];k(p,r,q);Array.prototype.splice.apply(p,[r,1].concat(q));return q.length}function o(s){var q=0;while(q<s.length){var r=s[q];if(r.intertype=="value"&&isIllegalType(r.type)){var p=m(r.ident,getBits(r.type)).map(function(t){return{intertype:"value",type:"i"+t.bits,ident:t.ident,byval:0}});Array.prototype.splice.apply(s,[q,1].concat(p));q+=p.length;continue}q++}}function j(p){if(p.intertype in MATHOPS){p.op=p.intertype;p.intertype="mathop"}}n.functions.forEach(function(q){o(q.params);var p=0;q.labels.forEach(function(B){var N=0,K;while(N<B.lines.length){var Q=B.lines[N];var I=Q;var z=false;walkInterdata(Q,function(aa){if(aa.intertype=="getelementptr"||(aa.intertype=="call"&&aa.ident in LLVM.INTRINSICS_32)){for(var Z=0;Z<aa.params.length;Z++){if(aa.params[Z].type=="i64"){aa.params[Z].type="i32"}}}if(isIllegalType(aa.valueType)||isIllegalType(aa.type)){z=true}});if(!z){N++;continue}var F=[];walkAndModifyInterdata(Q,function(aa){if(aa!=Q&&(!(aa.intertype in UNUNFOLDABLE)||(aa.intertype=="value"&&isNumber(aa.ident)&&isIllegalType(aa.type)))){if(Q.intertype=="phi"){assert(aa.intertype=="value","We can only unfold illegal constants in phis")}else{var Z="$$emscripten$temp$"+(p++);aa.assignTo=Z;F.unshift(aa);j(aa);return{intertype:"value",ident:Z,type:aa.type}}}else{if(aa.intertype=="switch"&&isIllegalType(aa.type)){aa.switchLabels.forEach(function(ab){if(ab.value[0]!="$"){var ac="$$emscripten$temp$"+(p++);F.unshift({assignTo:ac,intertype:"value",ident:ab.value,type:aa.type});ab.value=ac}})}}});if(F.length>0){k(B.lines,N-1,F);Array.prototype.splice.apply(B.lines,[N,0].concat(F));continue}dprint("legalizer","Legalizing "+Q.intertype+" at line "+Q.lineNum);var W=null;switch(Q.intertype){case"store":var X=[];K=getBits(Q.valueType);var H;H=m(Q.value.ident,K);var L=0;H.forEach(function(aa){var ab="$st$"+N+"$"+L;X.push({intertype:"getelementptr",assignTo:ab,ident:Q.pointer.ident,type:"[0 x i32]*",params:[{intertype:"value",ident:Q.pointer.ident,type:"[0 x i32]*"},{intertype:"value",ident:"0",type:"i32"},{intertype:"value",ident:L.toString(),type:"i32"}]});var Z="i"+aa.bits;X.push({intertype:"store",valueType:Z,value:{intertype:"value",ident:aa.ident,type:Z},pointer:{intertype:"value",ident:ab,type:Z+"*"},ident:ab,pointerType:Z+"*",align:Q.align});L++});Types.needAnalysis["[0 x i32]"]=0;N+=l(B.lines,N,X);continue;case"call":K=getBits(I.type);var H=m(Q.assignTo,K);var X=[I];o(I.params);if(I.assignTo){var L=0;X=X.concat(H.map(function(Z){return{intertype:"value",assignTo:Z.ident,type:"i"+K,ident:I.assignTo+"["+(L++)+"]"}}))}N+=l(B.lines,N,X);continue;case"return":K=getBits(Q.type);var H=m(Q.value.ident,K);Q.value.ident="["+H.map(function(Z){return Z.ident}).join(",")+"]";N++;continue;case"invoke":o(I.params);N++;continue;case"value":K=getBits(I.type);var H=m(Q.assignTo,K);var s=i(Q.ident,K);var L=0;var X=H.map(function(Z){return{intertype:"value",assignTo:Z.ident,type:"i"+K,ident:s[L++].ident}});N+=l(B.lines,N,X);continue;case"load":K=getBits(I.valueType);var H=m(Q.assignTo,K);var L=0;var X=[];H.forEach(function(aa){var ab="$st$"+N+"$"+L;X.push({intertype:"getelementptr",assignTo:ab,ident:I.pointer.ident,type:"[0 x i32]*",params:[{intertype:"value",ident:I.pointer.ident,type:"[0 x i32]*"},{intertype:"value",ident:"0",type:"i32"},{intertype:"value",ident:L.toString(),type:"i32"}]});var Z="i"+aa.bits;X.push({intertype:"load",assignTo:aa.ident,pointerType:Z+"*",valueType:Z,type:Z,pointer:{intertype:"value",ident:ab,type:Z+"*"},ident:ab,pointerType:Z+"*",align:I.align});L++});Types.needAnalysis["[0 x i32]"]=0;N+=l(B.lines,N,X);continue;case"phi":K=getBits(I.type);var X=[];var H=m(Q.assignTo,K);var L=0;var r={};I.params.map(function(Z){if(isNumber(Z.value.ident)){r[Z.value.ident]=i(Z.value.ident,K)}});H.forEach(function(Z){X.push({intertype:"phi",assignTo:Z.ident,type:"i"+Z.bits,params:I.params.map(function(aa){return{intertype:"phiparam",label:aa.label,value:{intertype:"value",ident:(aa.value.ident in r)?r[aa.value.ident][L].ident:(aa.value.ident+"$"+L),type:"i"+Z.bits}}})});L++});N+=l(B.lines,N,X);continue;case"switch":N++;continue;case"bitcast":var u=Q.type2;var v=Q.type;if((u in Runtime.INT_TYPES&&v in Runtime.FLOAT_TYPES)||(u in Runtime.FLOAT_TYPES&&v in Runtime.INT_TYPES)){N++;continue}case"inttoptr":case"ptrtoint":case"zext":case"sext":case"trunc":case"ashr":case"lshr":case"shl":case"or":case"and":case"xor":I={op:Q.intertype,variant:Q.variant,type:Q.type,params:Q.params};case"mathop":var X=[];var R=getBits(I.params[0].type);var C=0;var x=R;var t=null;var A=false;switch(I.op){case"ashr":A=true;case"lshr":C=parseInt(I.params[1].ident);break;case"shl":C=-parseInt(I.params[1].ident);break;case"sext":A=true;case"trunc":case"zext":case"ptrtoint":x=getBits(I.params[1]?I.params[1].ident:I.type);break;case"inttoptr":x=32;break;case"bitcast":if(!R){R=x=Runtime.getNativeTypeSize(I.params[0].type);warn("legalizing non-integer bitcast on ll #"+Q.lineNum)}break;case"select":R=x=getBits(I.params[1].type);var P=m(I.params[1].ident,R);var O=m(I.params[2].ident,R);t=function(Z,aa){return{intertype:"mathop",op:"select",type:"i"+P[aa].bits,params:[I.params[0],{intertype:"value",ident:P[aa].ident,type:"i"+P[aa].bits},{intertype:"value",ident:O[aa].ident,type:"i"+O[aa].bits}]}};break;case"or":case"and":case"xor":case"icmp":var M=m(I.params[1].ident,R);t=function(Z,aa){return{intertype:"mathop",op:I.op,variant:I.variant,type:"i"+M[aa].bits,params:[Z,{intertype:"value",ident:M[aa].ident,type:"i"+M[aa].bits}]}};if(I.op=="icmp"){if(R==64){N++;continue}W=function(){var aa="";for(var Z=0;Z<D.length;Z++){if(Z>0){switch(I.variant){case"eq":aa+="&&";break;case"ne":aa+="||";break;default:throw"unhandleable illegal icmp: "+I.variant}}aa+=D[Z].ident}return{intertype:"value",ident:aa,type:"rawJS",assignTo:Q.assignTo}}}break;case"add":case"sub":case"sdiv":case"udiv":case"mul":case"urem":case"srem":case"uitofp":case"sitofp":N++;continue;default:throw"Invalid mathop for legalization: "+[I.op,Q.lineNum,dump(Q)]}var S;if(R<=32){S=[{ident:I.params[0].ident,bits:R}]}else{S=m(I.params[0].ident,R)}if(!isNumber(C)){assert(R==64,"TODO: handle nonconstant shifts on != 64 bits");I.intertype="value";I.ident="Runtime.bitshift64("+S[0].ident+", "+S[1].ident+',"'+I.op+'",'+I.params[1].ident+"$0);var "+I.assignTo+"$0 = "+I.assignTo+"[0], "+I.assignTo+"$1 = "+I.assignTo+"[1];";N++;continue}var D=m(Q.assignTo,x);var V=C>=0?1:-1;var G=C>=0?"shl":"lshr";var J=C>=0?"lshr":"shl";var U=C>=0?Math.floor(C/32):Math.ceil(C/32);var y=Math.abs(C%32);if(A){var T="("+makeSignOp(S[S.length-1].ident,"i"+S[S.length-1].bits,"re",1,1)+" < 0 ? -1 : 0)";var Y={intertype:"value",ident:S[S.length-1].ident,type:"i32"}}for(var L=0;L<D.length;L++){var E={intertype:"value",ident:(L+U>=0&&L+U<S.length)?S[L+U].ident:(A?T:"0"),params:[(A&&L+U>S.length)?Y:null],type:"i32"};if(L==0&&isUnsignedOp(I.op)&&R<32){E.ident=makeSignOp(E.ident,"i"+R,"un",1,1)}if(y!=0){var w={intertype:"value",ident:(L+V+U>=0&&L+V+U<S.length)?S[L+V+U].ident:(A?T:"0"),params:[(A&&L+V+U>S.length)?Y:null],type:"i32"};w={intertype:"mathop",op:G,type:"i32",params:[w,{intertype:"value",ident:(32-y).toString(),type:"i32"}]};E={intertype:"mathop",op:(A&&C>=0&&L+V+U>=S.length)?"ashr":J,type:"i32",params:[E,{intertype:"value",ident:y.toString(),type:"i32"}]};E={intertype:"mathop",op:"or",type:"i32",params:[E,w]}}if(D[L].bits<32&&C<0){E={intertype:"mathop",op:"and",type:"i32",params:[E,{intertype:"value",ident:(Math.pow(2,D[L].bits)-1).toString(),type:"i32"}]}}if(t){E=t(E,L)}E.assignTo=D[L].ident;X.push(E)}if(x<=32){legalValue={intertype:"value",ident:D[0].ident+(x<32?"&"+(Math.pow(2,x)-1):""),type:"rawJS"};legalValue.assignTo=Q.assignTo;X.push(legalValue)}else{if(W){X.push(W())}}N+=l(B.lines,N,X);continue}assert(0,"Could not legalize illegal line: "+[Q.lineNum,dump(Q)])}if(dcheck("legalizer")){dprint("zz legalized: \n"+dump(B.lines))}})})}n.functions.forEach(function(p){p.labels.forEach(function(q){p.lines=p.lines.concat(q.lines)})});this.forwardItem(n,"Typevestigator")}});function d(l,n){if(l.length==1){return}if(Types.types[l]){return}if(["internal","hidden","inbounds","void"].indexOf(l)!=-1){return}if(Runtime.isNumberType(l)){return}dprint("types","Adding type: "+l);var p=removeAllPointing(l);var i=/^\[(\d+)\ x\ (.*)\]$/.exec(p);if(i&&!Types.types[p]){var k=parseInt(i[1]);k=Math.max(k,1);var o=i[2];d(o,n);if(k>=10*1024*1024){warnOnce("warning: very large fixed-size structural type: "+l+" - can you reduce it? (compilation may be slow)")}Types.types[p]={name_:p,fields:range(k).map(function(){return o}),lineNum:"?"};var m="[0 x "+o+"]";if(!Types.types[m]){Types.types[m]={name_:m,fields:[o,o],lineNum:"?"}}return}if(l[0]=="{"||l[0]=="<"){l=p;var j=l[0]=="<";Types.types[l]={name_:l,fields:splitTokenList(tokenize(l.substr(2+j,l.length-4-2*j)).tokens).map(function(q){return q[0].text}),packed:j,lineNum:"?"};return}if(isPointerType(l)){return}if(["["].indexOf(l)!=-1){return}Types.types[l]={name_:l,fields:["i"+(QUANTUM_SIZE*8)],flatSize:1,lineNum:"?"}}function h(i,j){d(i,j);if(QUANTUM_SIZE===1){Types.flipTypes();d(i,j);Types.flipTypes()}}e.addActor("Typevestigator",{processItem:function(j){if(f){for(var i in Types.needAnalysis){if(i){h(i,j)}}Types.needAnalysis={}}this.forwardItem(j,"Typeanalyzer")}});e.addActor("Typeanalyzer",{processItem:function b(o,i){var l=Types.types;var k=true;while(k){k=false;for(var j in l){var n=l[j];if(n.flatIndexes){continue}var m=true;n.fields.forEach(function(q){if(isStructType(q)){if(!l[q]){h(q,o);m=false}else{if(!l[q].flatIndexes){m=false}}}});if(!m){k=true;continue}Runtime.calculateStructAlignment(n);if(dcheck("types")){dprint("type (fat="+!!i+"): "+n.name_+" : "+JSON.stringify(n.fields))}if(dcheck("types")){dprint("                        has final size of "+n.flatSize+", flatting: "+n.needsFlattening+" ? "+(n.flatFactor?n.flatFactor:JSON.stringify(n.flatIndexes)))}}}if(QUANTUM_SIZE===1&&!i){Types.flipTypes();var p=QUANTUM_SIZE;Runtime.QUANTUM_SIZE=4;b(o,true);Runtime.QUANTUM_SIZE=p;Types.flipTypes()}if(!i){this.forwardItem(o,"VariableAnalyzer")}}});e.addActor("VariableAnalyzer",{processItem:function(j){var i=j.globalVariables;j.globalVariables={};i.forEach(function(k){k.impl="emulated";j.globalVariables[k.ident]=k});j.functions.forEach(function(n){n.variables={};n.params.forEach(function(o){if(o.intertype!=="varargs"){n.variables[o.ident]={ident:o.ident,type:o.type,origin:"funcparam",lineNum:n.lineNum,rawLinesIndex:-1}}});n.lines.forEach(function(q,p){if(q.assignTo){var o=n.variables[q.assignTo]={ident:q.assignTo,type:q.type,origin:q.intertype,lineNum:q.lineNum,rawLinesIndex:p};if(o.origin==="alloca"){o.allocatedNum=q.allocatedNum}}});if(QUANTUM_SIZE===1){n.lines.forEach(function(o){if(o.assignTo&&o.intertype==="bitcast"){n.variables[o.assignTo].originalType=o.type2;if(!isNumber(o.assignTo)){if(!n.variables[o.assignTo].derivedTypes){n.variables[o.assignTo].derivedTypes=[]}n.variables[o.assignTo].derivedTypes.push(o.type)}}})}function m(){dprint("vars","Analyzing variables for "+n.ident+"\n");for(vname in n.variables){var o=n.variables[vname];o.hasValueTaken=false;o.pointingLevels=pointingLevels(o.type);o.uses=0}var p=0;n.lines.forEach(function(q){walkInterdata(q,function(r){if(r.intertype=="noop"){p++}if(!p){if(r.ident in n.variables){n.variables[r.ident].uses++;if(r.intertype!="load"&&r.intertype!="store"){n.variables[r.ident].hasValueTaken=true}}}},function(r){if(r.intertype=="noop"){p--}})})}m();for(vname in n.variables){var k=n.variables[vname];var l=pointingLevels(k.type)>0?removePointing(k.type):null;if(k.origin=="getelementptr"){k.impl=VAR_EMULATED}else{if(k.origin=="funcparam"){k.impl=VAR_EMULATED}else{if(k.type=="i64*"&&USE_TYPED_ARRAYS==2){k.impl=VAR_EMULATED}else{if(MICRO_OPTS&&k.pointingLevels===0){k.impl=VAR_NATIVE}else{if(MICRO_OPTS&&k.origin==="alloca"&&!k.hasValueTaken&&k.allocatedNum===1&&(Runtime.isNumberType(l)||Runtime.isPointerType(l))){k.impl=VAR_NATIVIZED}else{k.impl=VAR_EMULATED}}}}}if(dcheck("vars")){dprint("// var "+vname+": "+JSON.stringify(k))}}});this.forwardItem(j,"Signalyzer")}});e.addActor("Signalyzer",{processItem:function(j){this.forwardItem(j,"QuantumFixer");if(USE_TYPED_ARRAYS!=2||CORRECT_SIGNS==1){return}function i(l,m){if(l.ident===m.ident){m.found++}}function k(l,m){if(l.intertype==="mathop"&&m.found&&!m.decided){if(isUnsignedOp(l.op,l.variant)){m.unsigned++}else{m.signed++}}}j.functions.forEach(function(l){l.lines.forEach(function(m,p){if(m.intertype==="load"){if(m.type in Runtime.FLOAT_TYPES){m.unsigned=false;return}var r=l.variables[m.assignTo];if(r.type==="i1"){m.unsigned=true;return}var q=r.uses;if(q===0){return}var s={ident:m.assignTo,found:0,unsigned:0,signed:0,total:q};var o=p-1,n=p+1;while(1){assert(o>=0||n<l.lines.length,"Signalyzer ran out of space to look for sign indications for line "+m.lineNum);if(o>=0&&walkInterdata(l.lines[o],i,k,s)){break}if(n<l.lines.length&&walkInterdata(l.lines[n],i,k,s)){break}if(s.total&&s.found>=s.total){break}o-=1;n+=1}assert(s.found>=s.total,"Could not Signalyze line "+m.lineNum);m.unsigned=s.unsigned>0;dprint("vars","Signalyzer: "+m.assignTo+" has unsigned == "+m.unsigned+" (line "+m.lineNum+")")}})})}});e.addActor("QuantumFixer",{processItem:function(k){this.forwardItem(k,"LabelAnalyzer");if(QUANTUM_SIZE!==1){return}var j={memcpy:{ptrs:[0,1],bytes:2},memmove:{ptrs:[0,1],bytes:2},memset:{ptrs:[0],bytes:2},qsort:{ptrs:[0],bytes:2}};function l(n,o,p){if(n[o]){return n[o].flatSize}if(p){Runtime.QUANTUM_SIZE=4}var m=Runtime.getNativeTypeSize(o);if(p){Runtime.QUANTUM_SIZE=1}return m}function i(m,n){if(m[n]){return m[n].flatIndexes}return[0]}k.functions.forEach(function(n){function m(r){function q(){if(r.intertype==="value"&&!isNumber(r.ident)){if(n.variables[r.ident]){return n.variables[r.ident].originalType||null}else{return k.globalVariables[r.ident].originalType}}else{if(r.intertype==="bitcast"){return r.params[0].type}else{if(r.intertype==="getelementptr"){if(r.params[0].type[0]==="["){return r.params[0].type}}}}return null}var p=q();if(p&&p[0]==="["){var o=/^\[(\d+)\ x\ (.*)\]\*$/.exec(p);assert(o);p=o[2]+"*"}return p}n.lines.forEach(function(C){if(C.intertype==="call"){var p=LibraryManager.getRootIdent(C.ident.substr(1));var x=j[p];if(!x){return}var r=x.ptrs.map(function(E){return C.params[E]});var D=C.params[x.bytes].ident;var u=r.map(m);for(var s=0;s<u.length;s++){if(!u[s]){return}}u=u.map(function(E){return removePointing(E)});var B=u.map(function(E){return l(Types.types,E)});var w=u.map(function(E){return l(Types.fatTypes,E,true)});warn(dedup(B).length===1,"All sizes should probably be identical here: "+dump(u)+":"+dump(B)+":"+C.lineNum);warn(dedup(w).length===1,"All fat sizes should probably be identical here: "+dump(u)+":"+dump(B)+":"+C.lineNum);var A=Math.min.apply(null,B);var q=Math.min.apply(null,w);if(isNumber(D)){var z;if(D%q===0){z=A*(D/q)}else{if(q%D===0&&A%(q/D)===0){z=A/(q/D)}else{var y=i(Types.types,u[0]).concat(A);var v=i(Types.fatTypes,u[0]).concat(q);var t=0;var o=D;z=0;while(o>0){o-=v[t+1]-v[t];z+=y[t+1]-y[t]}}}C.params[x.bytes].ident=z}else{C.params[x.bytes].intertype="jsvalue";C.params[x.bytes].ident=A+"*("+D+"/"+q+")"}}})});values(k.globalVariables).forEach(function(m){function n(q){if(q.contents){q.contents.forEach(n)}else{if(q.intertype==="getelementptr"&&q.params[0].intertype==="bitcast"&&q.params[0].type==="i8*"){var p=removePointing(q.params[0].params[0].type);var r=l(Types.fatTypes,p,true);var o=l(Types.types,p,false);assert(r%o===0);q.params.slice(1).forEach(function(t){if(t.intertype==="value"&&isNumber(t.ident)){var s=parseInt(t.ident)/(r/o);assert(s%1===0);t.ident=s.toString()}})}else{if(q.params){q.params.forEach(n)}}}}if(!m.external&&m.value){n(m.value)}})}});function c(i,j){function k(l,m){["label","labelTrue","labelFalse","toLabel","unwindLabel","defaultLabel"].forEach(function(n){if(l[n]){j(l,n)}})}if(i.intertype in BRANCH_INVOKE){k(i)}else{if(i.intertype=="switch"){k(i);i.switchLabels.forEach(k)}}}e.addActor("LabelAnalyzer",{processItem:function(i){i.functions.forEach(function(k){k.labelsDict={};k.labelIds={};k.labelIdsInverse={};k.labelIds[toNiceIdent("%0")]=0;k.labelIdsInverse[0]=toNiceIdent("%0");k.labelIds[toNiceIdent("%1")]=1;k.labelIdsInverse[1]=toNiceIdent("%1");k.labelIdCounter=2;k.labels.forEach(function(j){k.labelIds[j.ident]=k.labelIdCounter++;k.labelIdsInverse[k.labelIdCounter-1]=j.ident});k.labels.forEach(function(j){j.ident=k.labelIds[j.ident];j.lines.forEach(function(u){c(u,function(v,w){v[w]=k.labelIds[v[w]].toString()})})});k.labels.forEach(function(j){k.labelsDict[j.ident]=j});k.labels.forEach(function(j){j.lines.forEach(function(v){if(v.intertype=="phi"){for(var u=0;u<v.params.length;u++){v.params[u].label=k.labelIds[v.params[u].label];if(VERBOSE&&!v.params[u].label){warn("phi refers to nonexistent label on line "+v.lineNum)}}}})});k.lines.forEach(function(j){if(j.intertype=="indirectbr"){k.forceEmulated=true}});function l(j){if(k.labelsDict[j]){return j}if(j in ENTRY_IDENT_IDS){j=k.labelIds[ENTRY_IDENT];assert(k.labelsDict[j]);return j}return null}var o=toNiceIdent("@setjmp");k.setjmpTable=null;for(var n=0;n<k.labels.length;n++){var r=k.labels[n];for(var m=0;m<r.lines.length;m++){var t=r.lines[m];if(t.intertype=="call"&&t.ident==o){var p=r.ident;var q=k.labelIdCounter++;if(!k.setjmpTable){k.setjmpTable=[]}k.setjmpTable.push([p,q,t.assignTo]);k.labels.splice(n+1,0,{intertype:"label",ident:q,lineNum:r.lineNum+0.5,lines:r.lines.slice(m+1)});r.lines=r.lines.slice(0,m+1);r.lines.push({intertype:"branch",label:toNiceIdent(q),lineNum:t.lineNum+0.01});k.labels.forEach(function(j){j.lines.forEach(function(v){if(v.intertype=="phi"){for(var u=0;u<v.params.length;u++){var w=l(v.params[u].label);if(w==p){v.params[u].label=q}}}})})}}}if(k.setjmpTable){k.forceEmulated=true;recomputeLines(k)}k.labels.forEach(function(j){j.lines.forEach(function(x){if(x.intertype=="phi"){for(var w=0;w<x.params.length;w++){var z=x.params[w];if(VERBOSE&&!z.label){warn("phi refers to nonexistent label on line "+x.lineNum)}var y=l(z.label);if(y){var u=k.labelsDict[y];var v=u.lines.slice(-1)[0];assert(v.intertype in LLVM.PHI_REACHERS,"Only some can lead to labels with phis:"+[k.ident,j.ident,v.intertype]);if(!v.phi){v.phi=true;assert(!v.dependent);v.dependent={intertype:"phiassigns",params:[]}}v.dependent.params.push({intertype:"phiassign",ident:x.assignTo,value:z.value,targetLabel:j.ident})}}x.intertype="var";x.ident=x.assignTo;x.assignTo=null}})});if(k.ident in NECESSARY_BLOCKADDRS){Functions.blockAddresses[k.ident]={};for(var s in NECESSARY_BLOCKADDRS[k.ident]){assert(s in k.labelIds);Functions.blockAddresses[k.ident][s]=k.labelIds[s]}}});this.forwardItem(i,"StackAnalyzer")}});e.addActor("StackAnalyzer",{processItem:function(i){i.functions.forEach(function(n){var j=n.labels[0].lines;for(var l=0;l<j.length;l++){var m=j[l];if(!m.assignTo||m.intertype!="alloca"||!isNumber(m.allocatedNum)){break}m.allocatedSize=n.variables[m.assignTo].impl===VAR_EMULATED?calcAllocatedSize(m.allocatedType)*m.allocatedNum:0;if(USE_TYPED_ARRAYS===2){m.allocatedSize=Runtime.forceAlign(m.allocatedSize,QUANTUM_SIZE)}}var k=0;for(var l=0;l<j.length;l++){var m=j[l];if(!m.assignTo||m.intertype!="alloca"||!isNumber(m.allocatedNum)){break}m.allocatedIndex=k;k+=m.allocatedSize;delete m.allocatedSize}n.initialStack=k;n.otherStackAllocations=false;while(n.initialStack==0){n.params.forEach(function(p){if(p.byVal){n.otherStackAllocations=true}});if(n.otherStackAllocations){break}var o=false;j=n.lines;for(var l=0;l<j.length;l++){var m=j[l];if(!m.assignTo||m.intertype!="alloca"||!isNumber(m.allocatedNum)){o=true;continue}if(m.intertype=="alloca"&&o){n.otherStackAllocations=true;break}}if(n.otherStackAllocations){break}for(var l=0;l<j.length;l++){var m=j[l];if(m.intertype=="call"&&isVarArgsFunctionType(m.type)){n.otherStackAllocations=true;break}}if(n.otherStackAllocations){break}break}});this.forwardItem(i,"Relooper")}});e.addActor("Relooper",{processItem:function(j){function i(){j.__finalResult__=true;return[j]}function k(p,l,n,m){if(p.length==0){return null}dprint("relooping","prelooping: "+l+","+p.length+" labels");assert(l&&l[0]);var o={type:"emulated",id:"B",labels:p,entries:l.slice(0)};return o}j.functions.forEach(function(l){dprint("relooping","// relooping function: "+l.ident);l.block=k(l.labels,[toNiceIdent(l.labels[0].ident)],l.labelsDict,l.forceEmulated)});return i()}});e.addItem({items:g},"Sorter");return e.solve()};